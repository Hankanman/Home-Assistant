toilet:
  # Binary Sensors
  #----------------------------------#
  binary_sensor:
    # Bayesian
    #----------------------------------#
    - platform: bayesian
      name: Toilet Occupied
      prior: 0.01
      device_class: occupancy
      probability_threshold: 0.19
      observations:

        - platform: "state"
          entity_id: binary_sensor.toilet_bright
          prob_given_true: 0.0119643
          prob_given_false: 0.0011671
          to_state: "on"

        - platform: "state"
          entity_id: binary_sensor.toilet_motion
          prob_given_true: 0.2587902
          prob_given_false: 0.0001107
          to_state: "on"

        - platform: "state"
          entity_id: climate.toilet_radiator
          prob_given_true: 0.0714851
          prob_given_false: 0.0065530
          to_state: "heat"
  # Variable Sensors
  #----------------------------------#
  sensor:
  # Template Sensors
  #----------------------------------#
  template:
    # Template Binary Sensors
    #----------------------------------#
    binary_sensor:
      # Bright Sensors
      #----------------------------------#
      - unique_id: toilet_bright
        name: "Toilet Bright"
        device_class: light
        state: |
          {% set lux = states('sensor.toilet_illuminance') %}
          {% set threshold = states('input_number.toilet_illuminance_level') %}
          {% set selfState = states('binary_sensor.toilet_bright') %}
          {% set lightState = states('light.toilet') %}
          {% set selfLastChanged = states.binary_sensor.toilet_bright.last_changed %}
          {% if threshold | int(0) == 0 %}
            False
          {% elif lux | int(0) > (threshold | int(0) * 1.3) and lightState == 'off' %}
            True
          {% elif lux | int(0) > (threshold | int(0) * 3) %}
            True
          {% elif ((threshold | int(0) < lux | int(0) < (threshold | int(0) * 1.3 ))) and (as_timestamp(now())-as_timestamp(selfLastChanged) < 300) %}
            {{ selfState }}
          {% elif lux | int(0) < threshold | int(0) %}
            False
          {% else %}
            False
          {% endif %}

    # Template Variable Sensors
    #----------------------------------#
    sensor:
      # Probabilities
      #----------------------------------#
      - unique_id: toilet_occupied_probability
        name: Toilet Occupied Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.toilet_occupied','probability')*100 | int(0) ) | round(0) }}"
  # Media Players
  #----------------------------------#
  media_player:

  # Notification Platforms
  #----------------------------------#
  notify:

  # Shell Commands
  #----------------------------------#
  shell_command:

  # Switches
  #----------------------------------#
  switch:
