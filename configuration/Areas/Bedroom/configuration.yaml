bedroom:
  # Binary Sensors
  #----------------------------------#
  binary_sensor:
    # Bayesian
    #----------------------------------#
    - platform: bayesian
      name: Bedroom Occupied
      prior: 0.11
      device_class: occupancy
      probability_threshold: 0.7
      observations:

        - platform: "state"
          entity_id: binary_sensor.bedroom_door_contact
          prob_given_true: 0.0851935
          prob_given_false: 0.0009761
          to_state: "off"

        - platform: "state"
          entity_id: binary_sensor.bedroom_motion
          prob_given_true: 0.2749345
          prob_given_false: 0.0012895
          to_state: "on"

        - platform: "state"
          entity_id: binary_sensor.bedroom_temperature_motion_lux_1_occupancy
          prob_given_true: 0.2685164
          prob_given_false: 0.0012705
          to_state: "on"

        - platform: "state"
          entity_id: binary_sensor.bedroom_tv_state
          prob_given_true: 0.3530833
          prob_given_false: 0.0014775
          to_state: "on"

        - platform: "state"
          entity_id: binary_sensor.bedroom_windows
          prob_given_true: 0.0594911
          prob_given_false: 0.0618896
          to_state: "off"

        - platform: "state"
          entity_id: media_player.bedroom_tv
          prob_given_true: 0.0414211
          prob_given_false: 0.0002568
          to_state: "playing"

    - platform: bayesian
      name: Bed Occupied
      prior: 0.42
      device_class: occupancy
      probability_threshold: 0.9
      observations:
        - platform: "state"
          entity_id: "binary_sensor.bedroom_motion"
          prob_given_true: 0.11
          prob_given_false: 0.0267
          to_state: "on"
        - platform: "state"
          entity_id: "input_boolean.sleep_schedule"
          prob_given_true: 0.93
          prob_given_false: 0.173
          to_state: "on"
        - platform: template
          value_template: >
            {{ is_state('binary_sensor.seb_sleeping', 'on') and is_state('person.sebastian_burrell','home') }}
          prob_given_true: 0.5940
          prob_given_false: 0.0891
        - platform: template
          value_template: >
            {{ is_state('binary_sensor.laura_sleeping', 'on') and is_state('person.laura_ward','home') }}
          prob_given_true: 0.9680
          prob_given_false: 0.1452
        - platform: "state"
          entity_id: "media_player.bedroom_echo"
          prob_given_true: 0.11
          prob_given_false: 0.0333
          to_state: "playing"
        - platform: "state"
          entity_id: "media_player.bedroom_tv"
          prob_given_true: 0.21
          prob_given_false: 0.0667
          to_state: "playing"

  # Variable Sensors
  #----------------------------------#
  sensor:
    - platform: statistics
      name: Bed Left Average Voltage
      entity_id: sensor.bedroom_bed_presence_left_voltage
      state_characteristic: average_linear
      max_age:
        days: 4
    - platform: statistics
      name: Bed Right Average Voltage
      entity_id: sensor.bedroom_bed_presence_right_voltage
      state_characteristic: average_linear
      max_age:
        days: 4
  # Template Sensors
  #----------------------------------#

  template:
    # Template Binary Sensors
    #----------------------------------#
    binary_sensor:
      # Bright Sensors
      #----------------------------------#
      - unique_id: bedroom_bright
        name: "Bedroom Bright"
        device_class: light
        state: |
          {% set lux = states('sensor.bedroom_illuminance') %}
          {% set threshold = states('input_number.bedroom_illuminance_level') %}
          {% set selfState = states('binary_sensor.bedroom_bright') %}
          {% set lightState = states('light.bedroom') %}
          {% set selfLastChanged = states.binary_sensor.bedroom_bright.last_changed %}
          {% if threshold | int(0) == 0 %}
            False
          {% elif lux | int(0) > (threshold | int(0) * 1.3) and lightState == 'off' %}
            True
          {% elif lux | int(0) > (threshold | int(0) * 3) %}
            True
          {% elif ((threshold | int(0) < lux | int(0) < (threshold | int(0) * 1.3 ))) and (as_timestamp(now())-as_timestamp(selfLastChanged) < 300) %}
            {{ selfState }}
          {% elif lux | int(0) < threshold | int(0) %}
            False
          {% else %}
            False
          {% endif %}

      # Humid Sensors
      #----------------------------------#

    # Template Variable Sensors
    #----------------------------------#
    sensor:
      # Probabilities
      #----------------------------------#
      - unique_id: bedroom_occupied_probability
        name: Bedroom Occupied Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.bedroom_occupied','probability')*100 | int(0) ) | round(0) }}"

      - unique_id: bed_occupied_probability
        name: Bed Occupied Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.bed_occupied','probability')*100 | int(0) ) | round(0) }}"

  # Media Players
  #----------------------------------#
  media_player:
    - platform: universal
      name: Bedroom TV
      browse_media_entity: media_player.bedroom_tv_shield_adb
      device_class: tv
      unique_id: bedroom_tv
      children:
        - media_player.bedroom_tv_shield_adb
        - media_player.bedroom_tv_shield
        - media_player.bedroom_tv_shield_cast
        - media_player.bedroom_tv_panasonic
      commands:
        turn_on:
          service: media_player.turn_on
          target:
            entity_id: media_player.bedroom_tv_shield_adb
        turn_off:
          service: media_player.media_stop
          target:
            entity_id: media_player.bedroom_tv_shield_adb
        volume_up:
          service: media_player.volume_up
          target:
            entity_id: media_player.bedroom_tv_shield_adb
        volume_down:
          service: media_player.volume_down
          target:
            entity_id: media_player.bedroom_tv_shield_adb
        volume_mute:
          service: media_player.volume_mute
          target:
            entity_id: media_player.bedroom_tv_shield_adb
        select_source:
          service: media_player.select_source
          target:
            entity_id: media_player.bedroom_tv_shield_adb
          data:
            source: "{{ source }}"
        volume_set:
          service: media_player.volume_set
          target:
            entity_id: media_player.bedroom_tv_shield_adb
          data:
            volume_level: "{{ volume_level }}"
      attributes:
        source: media_player.bedroom_tv_shield_adb|source
        source_list: media_player.bedroom_tv_shield_adb|source_list
        entity_picture: media_player.bedroom_tv_shield_adb|entity_picture
        media_album_name: media_player.bedroom_tv_shield_adb|media_album_name
        media_title: media_player.bedroom_tv_shield_adb|media_title
        media_duration: media_player.bedroom_tv_shield_adb|media_duration
        media_position: media_player.bedroom_tv_shield_adb|media_position
  # Notification Platforms
  #----------------------------------#
  notify:

  # Shell Commands
  #----------------------------------#
  shell_command:

  # Switches
  #----------------------------------#
  switch:
    # - platform: template
    #   switches:
    #     bedroom_tv_power:
    #       friendly_name: Bedroom TV Power
    #       value_template: >
    #         {{ iif( states("media_player.bedroom_tv") in ["playing","standby","idle","paused"], "on", "off") }}
    #       turn_on:
    #         service: media_player.turn_on
    #         target:
    #           entity_id: media_player.bedroom_tv
    #       turn_off:
    #         service: media_player.turn_off
    #         target:
    #           entity_id: media_player.bedroom_tv

  # Cameras
  #----------------------------------#
  camera:
