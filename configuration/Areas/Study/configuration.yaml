study:
  binary_sensor:
    - platform: bayesian
      name: Study Occupancy Bayesian
      unique_id: study_occupancy_bayesian
      device_class: occupancy
      prior: 0.1  # Initial assumption of occupancy probability (e.g., 10%)
      probability_threshold: 0.5  # Threshold at which the room is considered occupied (e.g., 50%)
      observations:
        # Motion Sensor - high impact
        - entity_id: binary_sensor.study_motion
          platform: state
          to_state: 'on'
          prob_given_true: 0.9  # High probability if motion is detected
          prob_given_false: 0.1 # Low probability if no motion

        # Starrunner Sensor - high impact
        - entity_id: binary_sensor.starruner_active
          platform: state
          to_state: 'on'
          prob_given_true: 0.9  # High probability if pc activity is detected
          prob_given_false: 0.1 # Low probability if no pc activity motion

        # Door Contact Sensor - moderate impact
        - entity_id: binary_sensor.study_door_contact
          platform: state
          to_state: 'off'  # Door is closed
          prob_given_true: 0.6  # Moderate probability room is occupied if door is closed
          prob_given_false: 0.4 # Room might still be occupied if door is open, but less likely

        # Manual Override - highest impact
        - entity_id: input_boolean.study_occupied_override
          platform: state
          to_state: 'on'
          prob_given_true: 0.95  # Nearly certain if override is enabled
          prob_given_false: 0.05 # Very low probability without override

        # Illuminance Sensor - low impact (adds subtlety to the model)
        - entity_id: sensor.study_illuminance
          platform: numeric_state
          below: 100
          prob_given_true: 0.4  # Low light could indicate occupancy
          prob_given_false: 0.6 # If light is high, less likely but still possible

        # Temperature Sensor - comfort range, low impact
        - entity_id: sensor.study_temperature
          platform: numeric_state
          above: 18
          below: 25
          prob_given_true: 0.5  # Comfortable temperature range adds confidence
          prob_given_false: 0.5 # No strong inference if temperature is outside this range

        # Humidity Sensor - comfort range, low impact
        - entity_id: sensor.study_humidity
          platform: numeric_state
          above: 30
          below: 60
          prob_given_true: 0.4  # Ideal humidity might indicate someone is there
          prob_given_false: 0.6 # Less likely if humidity is outside the comfort range
  template:
    - trigger:
        - platform: state
          entity_id:
            - binary_sensor.study_motion
            - binary_sensor.study_door_contact
            - binary_sensor.starrunner_active
            - input_boolean.study_occupied_override
            - sensor.study_illuminance
            - sensor.study_temperature
            - sensor.study_humidity
      binary_sensor:
        - name: Study Occupancy
          unique_id: study_occupancy
          device_class: occupancy
          delay_off:
            minutes: 2
          state: |-
            {% if states('binary_sensor.study_motion') == 'unavailable' and states('binary_sensor.study_door_contact') == 'unavailable' and states('binary_sensor.starrunner_active') %}
              false
            {% else %}
              {% set scores = namespace(total=0) %}

              # Motion sensor - high weight
              {% if is_state('binary_sensor.study_motion', 'on') %}
                {% set scores.total = scores.total + 40 %}
              {% endif %}

              # PC Active sensor - high weight
              {% if is_state('binary_sensor.starrunner_active', 'on') %}
                {% set scores.total = scores.total + 40 %}
              {% endif %}

              # Door contact sensor - moderate weight
              {% if is_state('binary_sensor.study_door_contact', 'off') %}
                {% set scores.total = scores.total + 20 %}
              {% endif %}

              # Manual override - highest weight
              {% if is_state('input_boolean.study_occupied_override', 'on') %}
                {% set scores.total = scores.total + 50 %}
              {% endif %}

              # Illuminance sensor - low weight (indirect factor)
              {% set illuminance = states('sensor.study_illuminance') | float(0) %}
              {% if illuminance < 100 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              # Temperature sensor - low weight (comfortable temperature range)
              {% set temperature = states('sensor.study_temperature') | float(0) %}
              {% if temperature > 18 and temperature < 25 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              # Humidity sensor - low weight (comfortable range)
              {% set humidity = states('sensor.study_humidity') | float(0) %}
              {% if humidity > 30 and humidity < 60 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              {{ scores.total >= 50 }}
            {% endif %}
          attributes:
            confidence_score: |-
              {% set scores = namespace(total=0) %}

              # Motion sensor
              {% if is_state('binary_sensor.study_motion', 'on') %}
                {% set scores.total = scores.total + 40 %}
              {% endif %}

              # Door contact sensor
              {% if is_state('binary_sensor.study_door_contact', 'off') %}
                {% set scores.total = scores.total + 20 %}
              {% endif %}

              # Manual override
              {% if is_state('input_boolean.study_occupied_override', 'on') %}
                {% set scores.total = scores.total + 50 %}
              {% endif %}

              # Illuminance sensor
              {% set illuminance = states('sensor.study_illuminance') | float(0) %}
              {% if illuminance < 100 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              # Temperature sensor
              {% set temperature = states('sensor.study_temperature') | float(0) %}
              {% if temperature > 18 and temperature < 25 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              # Humidity sensor
              {% set humidity = states('sensor.study_humidity') | float(0) %}
              {% if humidity > 30 and humidity < 60 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              {{ scores.total }}

            occupancy_percentage: |-
              {% set scores = namespace(total=0) %}

              # Motion sensor
              {% if is_state('binary_sensor.study_motion', 'on') %}
                {% set scores.total = scores.total + 40 %}
              {% endif %}

              # Door contact sensor
              {% if is_state('binary_sensor.study_door_contact', 'off') %}
                {% set scores.total = scores.total + 20 %}
              {% endif %}

              # Manual override
              {% if is_state('input_boolean.study_occupied_override', 'on') %}
                {% set scores.total = scores.total + 50 %}
              {% endif %}

              # Illuminance sensor
              {% set illuminance = states('sensor.study_illuminance') | float(0) %}
              {% if illuminance < 100 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              # Temperature sensor
              {% set temperature = states('sensor.study_temperature') | float(0) %}
              {% if temperature > 18 and temperature < 25 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              # Humidity sensor
              {% set humidity = states('sensor.study_humidity') | float(0) %}
              {% if humidity > 30 and humidity < 60 %}
                {% set scores.total = scores.total + 10 %}
              {% endif %}

              {{ (scores.total / 100) * 100 | round(0) }} %

            active_triggers: |-
              {% set triggers = [] %}
              {% if is_state('binary_sensor.study_motion', 'on') %}
                {% set triggers = triggers + ['Motion Detected'] %}
              {% endif %}
              {% if is_state('binary_sensor.study_door_contact', 'off') %}
                {% set triggers = triggers + ['Door Closed'] %}
              {% endif %}
              {% if is_state('input_boolean.study_occupied_override', 'on') %}
                {% set triggers = triggers + ['Manual Override'] %}
              {% endif %}
              {% set illuminance = states('sensor.study_illuminance') | float(0) %}
              {% if illuminance < 100 %}
                {% set triggers = triggers + ['Low Illuminance'] %}
              {% endif %}
              {% set temperature = states('sensor.study_temperature') | float(0) %}
              {% if temperature > 18 and temperature < 25 %}
                {% set triggers = triggers + ['Comfortable Temperature'] %}
              {% endif %}
              {% set humidity = states('sensor.study_humidity') | float(0) %}
              {% if humidity > 30 and humidity < 60 %}
                {% set triggers = triggers + ['Comfortable Humidity'] %}
              {% endif %}
              {{ triggers|join(', ') }}
    - binary_sensor:
        - name: Study PC Active
          unique_id: study_pc_active
          state: |-
            {% set idle_time = states('sensor.pc_idle_time')|int(0) %}
            {% set power = states('sensor.pc_power')|float(0) %}
            {{ idle_time < 300 or power > 50 }}
          attributes:
            idle_time: >-
              {{ states('sensor.pc_idle_time')|int(0) }}
            power_draw: >-
              {{ states('sensor.pc_power')|float(0) }}
            apps_running: >-
              {{ state_attr('sensor.pc_status', 'running_apps')|default([]) }}
    - binary_sensor:
        - name: Study Temperature Rising
          unique_id: study_temp_rising
          state: |-
            {% set current = states('sensor.study_temperature')|float(20) %}
            {% set previous = state_attr('sensor.study_temperature', 'previous_value')|float(20) %}
            {% set threshold = 0.2 %}
            {{ (current - previous) > threshold }}
        - name: Study Temperature Falling
          unique_id: study_temp_falling
          state: |-
            {% set current = states('sensor.study_temperature')|float(20) %}
            {% set previous = state_attr('sensor.study_temperature', 'previous_value')|float(20) %}
            {% set threshold = 0.2 %}
            {{ (current - previous) < threshold }}
      sensor:
        - name: Study Temperature Differential
          unique_id: study_temp_differential
          state: |-
            {% set current = states('sensor.study_temperature')|float(20) %}
            {% set target = state_attr('climate.study', 'temperature')|float(20) %}
            {{ (current - target)|round(1) }}
          attributes:
            current_temp: >-
              {{ states('sensor.study_temperature')|float(20) }}
            target_temp: >-
              {{ state_attr('climate.study', 'temperature')|float(20) }}
            mode: >-
              {{ state_attr('climate.study', 'hvac_action')|default('off') }}
    - binary_sensor:
        - name: Study High Humidity
          unique_id: study_high_humidity
          state: |-
            {% set current = states('sensor.study_humidity')|float(50) %}
            {{ current > 75 }}
      sensor:
        - name: Study Humidity Change
          unique_id: study_humidity_change
          state: |-
            {% set current = states('sensor.study_humidity')|float(50) %}
            {% set average = states('sensor.sensor.study_humidity_average')|float(50) %}
            {{ ((current - average) / average * 100)|round(1) }}
          attributes:
            current_humidity: >-
              {{ states('sensor.study_humidity')|float(50) }}
            average_humidity: >-
              {{ states('sensor.sensor.study_humidity_average')|float(50) }}
    - binary_sensor:
        - name: Study Windows Open
          unique_id: study_windows_open
          state: >-
            {{ is_state('binary_sensor.study_windows', 'on') }}
          attributes:
            climate_impact: |-
              {% set temp_diff = states('sensor.study_temp_differential')|float(0) %}
              {% set window_open = is_state('binary_sensor.study_windows', 'on') %}
              {% if window_open %}
                {% if temp_diff > 2 %}
                  'heating_loss'
                {% elif temp_diff < -2 %}
                  'cooling_loss'
                {% else %}
                  'minimal'
                {% endif %}
              {% else %}
                'none'
              {% endif %}
  input_number:
    study_power_threshold:
      name: Study Power Alert Threshold
      min: 100.0
      max: 1000.0
      step: 50.0
      unit_of_measurement: W
      icon: mdi:flash-alert
      initial: 400.0
    study_temp_threshold:
      name: Study Temperature Threshold
      min: 19.0
      max: 25.0
      step: 0.5
      unit_of_measurement: °C
      icon: mdi:thermometer
      initial: 23.0
    study_light_brightness:
      name: Study Light Brightness
      min: 0.0
      max: 100.0
      step: 5.0
      unit_of_measurement: '%'
      icon: mdi:brightness-6
      initial: 100.0
    study_light_transition:
      name: Study Light Transition Time
      min: 0.0
      max: 10.0
      step: 0.5
      unit_of_measurement: s
      icon: mdi:transition
      initial: 5.0
    study_humidity_threshold:
      name: Study Humidity Threshold
      min: 30.0
      max: 80.0
      step: 1.0
      unit_of_measurement: '%'
      icon: mdi:water-percent
      initial: 60.0
  input_boolean:
    study_light_color_mode:
      name: Study Light Color Mode
      icon: mdi:palette
    study_pc_power_management:
      name: Study PC Power Management
      icon: mdi:desktop-classic
    study_occupied_override:
      name: Study Manual Occupancy Override
      icon: mdi:account-check
    study_sleep_mode:
      name: Study Sleep Mode
      icon: mdi:power-sleep
    study_automations:
      name: Study Automations
      icon: mdi:robot

  mqtt:
    binary_sensor:
      name: Starrunner Online
      state_topic: homeassistant/sensor/STARRUNNER/availability
      payload_on: "online"
      payload_off: "offline"
      device_class: connectivity
