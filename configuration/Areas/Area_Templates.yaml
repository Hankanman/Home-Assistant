area_templates:
  template:
    binary_sensor:
      - unique_id: area_study
        name: "Area | Study"
        device_class: occupancy
        state: "{{states('binary_sensor.study_occupied')}}"
        attributes:
          Icon: mdi:desk-lamp
          Occupied Prob Value: "{{state_attr('binary_sensor.study_occupied','probability') | float(0.1)}}"
          Occupied Prob String: "{{ (state_attr('binary_sensor.study_occupied','probability')*100 | int(10)) | round(0) | string + '%'}}"
          Lux Value: "{{states('sensor.study_illuminance') | int(10)}}"
          Lux String: "{{ states('sensor.study_illuminance') | int(10) | string + 'lx'}}"
          Bright Value: "{{states('binary_sensor.study_bright') | default(true)}}"
          Bright String: "{{ (state_attr('binary_sensor.study_occupied','probability')*100 | int(0)) | round(0) | string + '%' }}"
          Temp Value: "{{states('sensor.study_temperature') | float(15.0) | round(1)}}"
          Temp String: "{{ states('sensor.study_temperature') | float(15.0) | round(1) | string + 'â„ƒ'}}"
          Humidity Value: "{{states('sensor.study_humidity') | float(50.0) | round(0)}}"
          Humidity String: "{{ states('sensor.study_humidity') | float(50.0) | round(0) | string + '%'}}"
          Observed: >
            {% set ns = namespace(observed_entities='') %}
            {% for observation in state_attr('binary_sensor.study_occupied','observations') %}
              {% if observation['observed'] == true %}
                {% set entity_name = observation['entity_id'].split('.')[-1] %}
                {% set ns.observed_entities = ns.observed_entities + (', ' if ns.observed_entities else '') + entity_name %}
              {% endif %}
            {% endfor %}
            {{ ns.observed_entities }}