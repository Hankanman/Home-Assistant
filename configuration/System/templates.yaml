templates:
  template:
    binary_sensor:
      ####################################
      # Bright Sensors
      ####################################
      - unique_id: area_bathroom_bright
        name: "Area - Bathroom Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_bathroom_illuminance') | float) }}"
          light_state: "{{ states('light.bathroom') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_bathroom_illuminance') | int > (states('input_number.area_bathroom_lux_level') | int * 1.3) and is_state('light.bathroom', 'off') %}
            True
          {% elif states('sensor.area_bathroom_illuminance') | int > (states('input_number.area_bathroom_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_bathroom_lux_level') | int < states('sensor.area_bathroom_illuminance') | int < (states('input_number.area_bathroom_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_bathroom_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_bathroom_bright') }}
          {% elif states('sensor.area_bathroom_illuminance') | int < states('input_number.area_bathroom_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_bedroom_bright
        name: "Area - Bedroom Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_bedroom_illuminance') | float) }}"
          light_state: "{{ states('light.bedroom') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_bedroom_illuminance') | int > (states('input_number.area_bedroom_lux_level') | int * 1.3) and is_state('light.bedroom', 'off') %}
            True
          {% elif states('sensor.area_bedroom_illuminance') | int > (states('input_number.area_bedroom_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_bedroom_lux_level') | int < states('sensor.area_bedroom_illuminance') | int < (states('input_number.area_bedroom_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_bedroom_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_bedroom_bright') }}
          {% elif states('sensor.area_bedroom_illuminance') | int < states('input_number.area_bedroom_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_entrance_bright
        name: "Area - Entrance Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_entrance_illuminance') | float) }}"
          light_state: "{{ states('light.entrance') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_entrance_illuminance') | int > (states('input_number.area_entrance_lux_level') | int * 1.3) and is_state('light.entrance', 'off') %}
            True
          {% elif states('sensor.area_entrance_illuminance') | int > (states('input_number.area_entrance_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_entrance_lux_level') | int < states('sensor.area_entrance_illuminance') | int < (states('input_number.area_entrance_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_entrance_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_entrance_bright') }}
          {% elif states('sensor.area_entrance_illuminance') | int < states('input_number.area_entrance_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_hall_bright
        name: "Area - Hall Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_hall_illuminance') | float) }}"
          light_state: "{{ states('light.hall') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_hall_illuminance') | int > (states('input_number.area_hall_lux_level') | int * 1.3) and is_state('light.hall', 'off') %}
            True
          {% elif states('sensor.area_hall_illuminance') | int > (states('input_number.area_hall_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_hall_lux_level') | int < states('sensor.area_hall_illuminance') | int < (states('input_number.area_hall_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_hall_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_hall_bright') }}
          {% elif states('sensor.area_hall_illuminance') | int < states('input_number.area_hall_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_kitchen_bright
        name: "Area - Kitchen Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_kitchen_illuminance') | float) }}"
          light_state: "{{ states('light.kitchen') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_kitchen_illuminance') | int > (states('input_number.area_kitchen_lux_level') | int * 1.3) and is_state('light.kitchen', 'off') %}
            True
          {% elif states('sensor.area_kitchen_illuminance') | int > (states('input_number.area_kitchen_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_kitchen_lux_level') | int < states('sensor.area_kitchen_illuminance') | int < (states('input_number.area_kitchen_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_kitchen_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_kitchen_bright') }}
          {% elif states('sensor.area_kitchen_illuminance') | int < states('input_number.area_kitchen_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_lounge_bright
        name: "Area - Lounge Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_lounge_illuminance') | float) }}"
          light_state: "{{ states('light.lounge') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_lounge_illuminance') | int > (states('input_number.area_lounge_lux_level') | int * 1.3) and is_state('light.lounge', 'off') %}
            True
          {% elif states('sensor.area_lounge_illuminance') | int > (states('input_number.area_lounge_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_lounge_lux_level') | int < states('sensor.area_lounge_illuminance') | int < (states('input_number.area_lounge_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_lounge_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_lounge_bright') }}
          {% elif states('sensor.area_lounge_illuminance') | int < states('input_number.area_lounge_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_study_bright
        name: "Area - Study Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_study_illuminance') | float) }}"
          light_state: "{{ states('light.study') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_study_illuminance') | int > (states('input_number.area_study_lux_level') | int * 1.3) and is_state('light.study', 'off') %}
            True
          {% elif states('sensor.area_study_illuminance') | int > (states('input_number.area_study_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_study_lux_level') | int < states('sensor.area_study_illuminance') | int < (states('input_number.area_study_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_study_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_study_bright') }}
          {% elif states('sensor.area_study_illuminance') | int < states('input_number.area_study_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      - unique_id: area_toilet_bright
        name: "Area - Toilet Bright"
        device_class: light
        attributes:
          current_illuminance: "{{ (states('sensor.area_toilet_illuminance') | float) }}"
          light_state: "{{ states('light.toilet') }}"
          sun: "{{ states('sun.sun') }}"
        state: |
          {% if states('sensor.area_toilet_illuminance') | int > (states('input_number.area_toilet_lux_level') | int * 1.3) and is_state('light.toilet', 'off') %}
            True
          {% elif states('sensor.area_toilet_illuminance') | int > (states('input_number.area_toilet_lux_level') | int * 3) %}
            True
          {% elif ((states('input_number.area_toilet_lux_level') | int < states('sensor.area_toilet_illuminance') | int < (states('input_number.area_toilet_lux_level') | int * 1.3 ))) and (as_timestamp(now())-as_timestamp(states.binary_sensor.area_toilet_bright.last_changed) < 300) %}
            {{ states('binary_sensor.area_toilet_bright') }}
          {% elif states('sensor.area_toilet_illuminance') | int < states('input_number.area_toilet_lux_level') | int %}
            False
          {% else %}
            False
          {% endif %}

      ####################################
      # Humid Sensors
      ####################################
      - unique_id: area_bathroom_humid
        name: "Area - Bathroom Humid"
        device_class: moisture
        state: "{{states('sensor.area_bathroom_humidity') | int > 93}}"

      ####################################
      # People Home Binary Sensors
      ####################################
      - unique_id: people_home
        name: "People Home"
        icon: "mdi:home"
        device_class: presence
        state: "{{ is_state_attr('sensor.laura_location', 'Location', 'Home') or is_state_attr('sensor.seb_location', 'Location', 'home') }}"

      ####################################
      # Sleeping Binary Sensors
      ####################################
      - unique_id: laura_sleeping
        name: "Laura Sleeping"
        icon: "mdi:sleep"
        state: "{{ (states('sensor.laura_phone_sleep_confidence') | int > 90 and is_state('person.laura_ward','home')) }}"

      - unique_id: seb_sleeping
        name: "Seb Sleeping"
        icon: "mdi:sleep"
        state: "{{ (states('sensor.seb_phone_sleep_confidence') | int > 90 and is_state('person.sebastian_burrell','home')) }}"

      - unique_id: sleeping
        name: "Sleeping"
        icon: "mdi:sleep"
        state: "{{ ((is_state('binary_sensor.seb_sleeping', 'on') and is_state('person.sebastian_burrell','home')) or (is_state('binary_sensor.laura_sleeping', 'on') and is_state('person.laura_ward','home'))) and  is_state('binary_sensor.area_bedroom_bed_occupied', 'on')}}"

      - unique_id: area_upstairs_sleep_mode
        name: Area - Upstairs Sleep Mode
        state: >
          {% if (is_state('input_boolean.area_bedroom_sleep_mode','on') or is_state('input_boolean.area_study_sleep_mode','on')) and is_state('sun.sun', 'below_horizon') %}
            on
          {% else %}
            off
          {% endif %}

      - unique_id: area_downstairs_sleep_mode
        name: Area - Downstairs Sleep Mode
        state: >
          {% if is_state('input_boolean.area_lounge_sleep_mode','on') and is_state('sun.sun', 'below_horizon') %}
            on
          {% else %}
            off
          {% endif %}

      ####################################
      # PC Active Sensors
      ####################################
      - unique_id: starrunner_active
        name: "Starrunner Active"
        device_class: connectivity
        state: >-
          {% if is_state('binary_sensor.starrunner_online', 'off' ) %}
            'off'
          {% else %}
            {{ states('sensor.starrunner_idle_time') | int < 5 }}
          {% endif %}

    sensor:
      ####################################
      # Activity & Availability
      ####################################
      - unique_id: starrunner_idle_time
        name: "Starrunner Idle Time"
        unit_of_measurement: Minutes
        state: "{{ ((now() | as_timestamp) | int / 60) | round(0, 'floor') - ((states('sensor.starrunner_last_active') | as_timestamp) | int / 60) | round(0, 'floor') }}"

      ####################################
      # Bin Collection
      ####################################
      - unique_id: bin_collection
        name: Bin Collection
        icon: mdi:trash-can
        state: >
          {% set map = {"RECYCLE": "blue", "DOMESTIC": "black", "ORGANIC": "green"} %}
          {{ "The " }}
          {%- for type in state_attr('sensor.bin_collection_data', 'roundTypes') -%}
            {%- if loop.length > 1 -%}
              {%- if loop.first -%}
                {{map[type]}}
              {%- elif loop.last -%}
                {{ ", and " }}{{map[type]}}
              {%- else -%}
                {{ ", " }}{{map[type]}}
              {%- endif -%}
            {%- else -%}
              {{map[type]}}
            {%- endif -%}
          {%- endfor -%}
            {{strptime(state_attr('sensor.bin_collection_data', 'date'),"%Y-%m-%dT%H:%M:%SZ").strftime(" bin will be collected on %A, %b %d")}}
        attributes:
          Date: "{{ strptime(state_attr('sensor.bin_collection_data', 'date'),'%Y-%m-%dT%H:%M:%SZ').strftime('%d/%m/%Y') }}"
          Day: "{{ strptime(state_attr('sensor.bin_collection_data', 'date'),'%Y-%m-%dT%H:%M:%SZ').strftime('%A') }}"
          Types: >
            {% set map = {"RECYCLE": "blue", "DOMESTIC": "black", "ORGANIC": "green"} %}
            {%- for type in state_attr('sensor.bin_collection_data', 'roundTypes') -%}
              {%- if loop.length > 1 -%}
                {%- if loop.first -%}
                  {{map[type]}}
                {%- elif loop.last -%}
                  {{ ", and " }}{{map[type]}}
                {%- else -%}
                  {{ ", " }}{{map[type]}}
                {%- endif -%}
              {%- else -%}
                {{map[type]}}
              {%- endif -%}
            {%- endfor -%}
          Delayed: "{% if state_attr('sensor.bin_collection_data', 'slippedCollection') %}Yes{% else %}No{% endif %}"
          Black: "{% if 'DOMESTIC' in state_attr('sensor.bin_collection_data', 'roundTypes') %}Yes{% else %}No{% endif %}"
          Blue: "{% if 'RECYCLE' in state_attr('sensor.bin_collection_data', 'roundTypes') %}Yes{% else %}No{% endif %}"
          Green: "{% if 'ORGANIC' in state_attr('sensor.bin_collection_data', 'roundTypes') %}Yes{% else %}No{% endif %}"
          Timestamp: "{{ as_timestamp(strptime(state_attr('sensor.bin_collection_data', 'date'),'%Y-%m-%dT%H:%M:%SZ')) }}"
          Reminder: >
            {% set map = {"RECYCLE": "blue", "DOMESTIC": "black", "ORGANIC": "green"} %}
            {{ "The " }}
              {%- for type in state_attr('sensor.bin_collection_data', 'roundTypes') -%}
                {%- if loop.length > 1 -%}
                  {%- if loop.first -%}
                    {{map[type]}}
                  {%- elif loop.last -%}
                    {{ " and " }}{{map[type]}}
                  {%- else -%}
                    {{ ", " }}{{map[type]}}
                  {%- endif -%}
                {%- else -%}
                  {{map[type]}}
                {%- endif -%}
              {%- endfor -%}
              {{" bin will be collected tomorrow, make sure they are out!"}}

      ####################################
      # Climate Temperature
      ####################################
      - unique_id: rad_01_temperature
        name: "RAD-01 Temperature"
        unit_of_measurement: °C
        device_class: temperature
        state: "{{ state_attr('climate.bathroom_rad_01', 'current_temperature') }}"
      - unique_id: rad_02_temperature
        name: "RAD-02 Temperature"
        unit_of_measurement: °C
        device_class: temperature
        state: "{{ state_attr('climate.bedroom_rad_02', 'current_temperature') }}"
      - unique_id: rad_03_temperature
        name: "RAD-03 Temperature"
        unit_of_measurement: °C
        device_class: temperature
        state: "{{ state_attr('climate.study_rad_03', 'current_temperature') }}"
      - unique_id: rad_04_temperature
        name: "RAD-04 Temperature"
        unit_of_measurement: °C
        device_class: temperature
        state: "{{ state_attr('climate.toilet_rad_04', 'current_temperature') }}"
      - unique_id: tst_01_temperature
        name: "TST-01 Temperature"
        unit_of_measurement: °C
        device_class: temperature
        state: "{{ state_attr('climate.stairs_tst_01', 'current_temperature') }}"
      - unique_id: area_outside_temperature
        name: "Area - Outside Temperature"
        unit_of_measurement: °C
        device_class: temperature
        state: "{{state_attr('weather.home', 'temperature')}}"
      ####################################
      # Climate Humidity
      ####################################
      - unique_id: area_outside_humidity
        name: "Area - Outside Humidity"
        unit_of_measurement: "%"
        device_class: humidity
        state: "{{state_attr('weather.home', 'humidity')}}"

      ####################################
      # Echo Sensors
      ####################################
      - unique_id: last_echo
        name: Last Echo
        state: "{{ expand(states.group.echos) | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first | default }}"

      ####################################
      # Energy
      ####################################
      - unique_id: total_energy_usage
        name: Total Energy Usage
        device_class: energy
        unit_of_measurement: "kWh"
        state_class: measurement
        state: "{{ (states('sensor.gas_daily_usage') | float + states('sensor.electricity_daily_usage') | float) | round(2) }}"
        attributes:
          interval_start: "{{ as_timestamp(state_attr('sensor.gas_daily_usage', 'interval_start')) | timestamp_local }}"
          interval_end: "{{ as_timestamp(state_attr('sensor.gas_daily_usage', 'interval_end')) | timestamp_local }}"
      - unique_id: current_electricity_price
        name: Current Electricity Price
        unit_of_measurement: "p/kWh"
        state: "{{ states('sensor.electricity_unit_cost') | float / 100 }}"

      ####################################
      # Endeavor Sensors
      ####################################
      - unique_id: endeavor_storage_used
        name: Endeavor Storage Used
        state: "{{ state_attr('binary_sensor.endeavor', 'arrayUsedSpace') | regex_replace(find=' TB', replace='') }}"
        unit_of_measurement: TB
      - unique_id: endeavor_storage_total
        name: Endeavor Storage Total
        state: "{{ state_attr('binary_sensor.endeavor', 'arrayTotalSpace') | regex_replace(find=' TB', replace='') }}"
        unit_of_measurement: TB
      - unique_id: endeavor_storage_free
        name: Endeavor Storage Free
        state: "{{ state_attr('binary_sensor.endeavor', 'arrayFreeSpace') | regex_replace(find=' TB', replace='') }}"
        unit_of_measurement: TB

      ####################################
      # Media States
      ####################################
      - unique_id: spotify_seb_source
        name: Spotify Seb Source
        state: >
          {% if is_state('media_player.spotify_seb', 'idle') %}
            none
          {% else %}
            {{state_attr('media_player.spotify_seb', 'source')}}
          {% endif %}
      - unique_id: spotify_laura_source
        name: Spotify Laura Source
        state: >
          {% if is_state('media_player.spotify_laura', 'idle') %}
            none
          {% else %}
            {{state_attr('media_player.spotify_laura', 'source')}}
          {% endif %}
      ####################################
      # Probabilities
      ####################################
      # Areas
      - unique_id: area_bathroom_probability
        name: Area - Bathroom Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_bathroom_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_bedroom
        name: Area - Bedroom Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_bedroom_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_entrance_probability
        name: Area - Entrance Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_entrance_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_hall_probability
        name: Area - Hall Probability
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_hall_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_kitchen_probability
        name: Area - Kitchen Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_kitchen_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_lounge_probability
        name: Area - Lounge Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_lounge_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_study_probability
        name: Area - Study Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_study_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: area_toilet_probability
        name: Area - Toilet Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_toilet_occupied','probability')*100 | int) | round(0) }}"

      # Other
      - unique_id: in_bed_probability
        name: In Bed Probability
        state_class: measurement
        unit_of_measurement: "%"
        state: "{{ (state_attr('binary_sensor.area_bedroom_bed_occupied','probability')*100 | int) | round(0) }}"

      - unique_id: seb_location
        name: Seb Location
        state: |
          {% if is_state('person.sebastian_burrell', 'home')  and  is_state_attr('sensor.seb_location', 'devices_home', 'Yes') %}
            Seb's in the {{ state_attr('sensor.seb_location', 'last_area') | lower }}
          {% elif not is_state('person.sebastian_burrell', 'home') %}
            {% if is_state('person.sebastian_burrell', 'not_home') and is_state_attr('sensor.seb_location', 'Activity', 'in_vehicle') %}
              Seb is driving through {{ state_attr('sensor.seb_location', 'Locality') }}
            {% elif is_state('person.sebastian_burrell', 'not_home') %}
              Seb's in {{ state_attr('sensor.seb_location', 'Locality') }}
            {% else %}
              Seb's at {{ states('person.sebastian_burrell') }}
            {% endif %}
          {% else %}
            Seb's at {{ states('person.sebastian_burrell') | lower }}
          {% endif %}
        attributes:
          Zone: >
            {{state_attr('sensor.double_take_seb','zones')[0] | regex_replace(find='Zone - ', replace='', ignorecase=False)}}
          Location: |
            {% if is_state('person.sebastian_burrell', 'home')  and  is_state_attr('sensor.seb_location', 'devices_home', 'Yes') %}
              {{ state_attr('sensor.seb_location', 'last_area') }}
            {% elif not is_state('person.sebastian_burrell', 'home') %}
              {% if is_state('person.sebastian_burrell', 'not_home') %}
                {{ state_attr('sensor.seb_location', 'Locality') }}
              {% else %}
                {{ states('person.sebastian_burrell') }}
              {% endif %}
            {% else %}
              {{ states('person.sebastian_burrell') }}
            {% endif %}
          Last Area: >
            {% set x =  [ states.sensor.seb_phone_ble_room_presence,
                      states.sensor.ble_seb_watch_room_presence]
              | selectattr('state', 'ne', 'not_home')
              | sort(reverse=true, attribute='last_changed')
              | list %}
            {% if x | count > 0 %}
              {{ x[0].state }}
            {% else %}
              {{ state_attr('sensor.seb_location', 'last_area') }}
            {% endif %}
          Devices Home: >
            {% if not (is_state('sensor.seb_phone_ble_room_presence', 'not_home') and is_state('sensor.ble_seb_watch_room_presence', 'not_home')) %}
              Yes
            {% else %}
              No
            {% endif %}
          Locality: >
            {% if states.sensor.seb_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.seb_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.seb_phone_geocoded_location', 'Locality', 'null') %}
                {{ state_attr('sensor.seb_location', 'Locality') }}
              {% else %}
                {{ state_attr('sensor.seb_phone_geocoded_location', 'Locality') }}
              {% endif %}
            {% endif %}
          Longitude: >
            {% if states.sensor.seb_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.seb_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.seb_phone_geocoded_location', 'Longitude', 'null') %}
                {{ state_attr('sensor.seb_location', 'Longitude') }}
              {% else %}
                {{ state_attr('sensor.seb_phone_geocoded_location', 'Longitude') }}
              {% endif %}
            {% endif %}
          Latitude: >
            {% if states.sensor.seb_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.seb_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.seb_phone_geocoded_location', 'Latitude', 'null') %}
                {{ state_attr('sensor.seb_location', 'Latitude') }}
              {% else %}
                {{ state_attr('sensor.seb_phone_geocoded_location', 'Latitude') }}
              {% endif %}
            {% endif %}
          Thoroughfare: >
            {% if states.sensor.seb_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.seb_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.seb_phone_geocoded_location', 'Thoroughfare', 'null') %}
                {{ state_attr('sensor.seb_location', 'Thoroughfare') }}
              {% else %}
                {{ state_attr('sensor.seb_phone_geocoded_location', 'Thoroughfare') }}
              {% endif %}
            {% endif %}
          Address: >
            {% if states.sensor.seb_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.seb_phone_geocoded_location', 'Unknown') or is_state('sensor.seb_phone_geocoded_location', 'Unavailable') %}
                {{ state_attr('sensor.seb_location', 'Address') }}
              {% else %}
                {{ states('sensor.seb_phone_geocoded_location') }}
              {% endif %}
            {% endif %}
          Activity: >
            {% if states.sensor.seb_phone_detected_activity is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.seb_phone_detected_activity', 'Unknown') or is_state('sensor.seb_phone_detected_activity', 'Unavailable') %}
                {{ state_attr('sensor.seb_location', 'Activity') }}
              {% else %}
                {{ states('sensor.seb_phone_detected_activity') }}
              {% endif %}
            {% endif %}
      - unique_id: laura_location
        name: Laura Location
        state: |
          {% if is_state('person.laura_ward', 'home')  and  is_state_attr('sensor.laura_location', 'devices_home', 'Yes') %}
            Laura's in the {{ state_attr('sensor.laura_location', 'last_area') | lower }}
          {% elif not is_state('person.laura_ward', 'home') %}
            {% if is_state('person.laura_ward', 'not_home') and is_state_attr('sensor.laura_location', 'Activity', 'in_vehicle') %}
              Laura's driving through {{ state_attr('sensor.laura_location', 'Locality') }}
            {% elif is_state('person.laura_ward', 'not_home') %}
              Laura's in {{ state_attr('sensor.laura_location', 'Locality') }}
            {% else %}
              Laura's at {{ states('person.laura_ward') }}
            {% endif %}
          {% else %}
            Laura's at {{ states('person.laura_ward') | lower }}
          {% endif %}
        attributes:
          Zone: >
            {{state_attr('sensor.double_take_laura','zones')[0] | regex_replace(find='Zone - ', replace='', ignorecase=False)}}
          Location: |
            {% if is_state('person.laura_ward', 'home')  and  is_state_attr('sensor.laura_location', 'devices_home', 'Yes') %}
              {{ state_attr('sensor.laura_location', 'last_area') }}
            {% elif not is_state('person.laura_ward', 'home') %}
              {% if is_state('person.laura_ward', 'not_home') %}
                {{ state_attr('sensor.laura_location', 'Locality') }}
              {% else %}
                {{ states('person.laura_ward') }}
              {% endif %}
            {% else %}
              {{ states('person.laura_ward') }}
            {% endif %}
          Last Area: >
            {% set x =  [ states.sensor.laura_phone_ble_room_presence,
                      states.sensor.ble_laura_watch_room_presence]
              | selectattr('state', 'ne', 'not_home')
              | sort(reverse=true, attribute='last_changed')
              | list %}
            {% if x | count > 0 %}
              {{ x[0].state }}
            {% else %}
              {{ state_attr('sensor.laura_location', 'last_area') }}
            {% endif %}
          Devices Home: >
            {% if not (is_state('sensor.laura_phone_ble_room_presence', 'not_home') and is_state('sensor.ble_laura_watch_room_presence', 'not_home')) %}
              Yes
            {% else %}
              No
            {% endif %}
          Locality: >
            {% if states.sensor.laura_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.laura_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.laura_phone_geocoded_location', 'Locality', 'null') %}
                {{ state_attr('sensor.laura_location', 'Locality') }}
              {% else %}
                {{ state_attr('sensor.laura_phone_geocoded_location', 'Locality') }}
              {% endif %}
            {% endif %}
          Longitude: >
            {% if states.sensor.laura_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.laura_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.laura_phone_geocoded_location', 'Longitude', 'null') %}
                {{ state_attr('sensor.laura_location', 'Longitude') }}
              {% else %}
                {{ state_attr('sensor.laura_phone_geocoded_location', 'Longitude') }}
              {% endif %}
            {% endif %}
          Latitude: >
            {% if states.sensor.laura_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.laura_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.laura_phone_geocoded_location', 'Latitude', 'null') %}
                {{ state_attr('sensor.laura_location', 'Latitude') }}
              {% else %}
                {{ state_attr('sensor.laura_phone_geocoded_location', 'Latitude') }}
              {% endif %}
            {% endif %}
          Thoroughfare: >
            {% if states.sensor.laura_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.laura_phone_geocoded_location', 'Unknown') or is_state_attr('sensor.laura_phone_geocoded_location', 'Thoroughfare', 'null') %}
                {{ state_attr('sensor.laura_location', 'Thoroughfare') }}
              {% else %}
                {{ state_attr('sensor.laura_phone_geocoded_location', 'Thoroughfare') }}
              {% endif %}
            {% endif %}
          Address: >
            {% if states.sensor.laura_phone_geocoded_location is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.laura_phone_geocoded_location', 'Unknown') or is_state('sensor.laura_phone_geocoded_location', 'Unavailable') %}
                {{ state_attr('sensor.laura_location', 'Address') }}
              {% else %}
                {{ states('sensor.laura_phone_geocoded_location') }}
              {% endif %}
            {% endif %}
          Activity: >
            {% if states.sensor.laura_phone_detected_activity is undefined %}
              Unknown
            {% else %}
              {% if is_state('sensor.laura_phone_detected_activity', 'Unknown') or is_state('sensor.laura_phone_detected_activity', 'Unavailable') %}
                {{ state_attr('sensor.laura_location', 'Activity') }}
              {% else %}
                {{ states('sensor.laura_phone_detected_activity') }}
              {% endif %}
            {% endif %}
