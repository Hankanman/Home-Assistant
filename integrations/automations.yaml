automations:
  - id: tv-time-bedroom
    alias: Bedroom - Lights
    trigger:
    - entity_id: media_player.bedroom_tv
      platform: state
    - platform: state
      entity_id: binary_sensor.bedroom_trisensor_motion
    - entity_id: binary_sensor.bedroom_bright
      platform: state
    - entity_id: input_boolean.sleep_mode
      platform: state
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: media_player.bedroom_tv
          state: 'on'
        - condition: state
          entity_id: input_boolean.sleep_mode
          state: 'off'
        sequence:
        - service: light.turn_on
          data:
            brightness_pct: 20
          target:
            entity_id: light.bedroom
      default:
      - condition: state
        entity_id: binary_sensor.bedroom_trisensor_motion
        state: 'off'
        for: 00:20:00
      - service: light.turn_off
        data: {}
        target:
          device_id: b8b19b4340c24eb5a428953241fc0047
    mode: restart
  - id: disable-sleep-mode
    alias: Morning - Startup
    trigger:
    - at: input_datetime.morning_startup
      platform: time
    action:
    - entity_id: input_boolean.sleep_mode
      service: input_boolean.turn_off
    - condition: state
      entity_id: binary_sensor.people_home
      state: 'on'
    - service: climate.turn_on
      data: {}
      entity_id: climate.central
    - service: climate.set_temperature
      data:
        entity_id: climate.central
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.study
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.bedroom
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.bathroom
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.toilet
        temperature: 10
        hvac_mode: heat
    mode: single
  - id: request-location-update
    alias: Location - Get Update
    trigger:
    - minutes: /10
      platform: time_pattern
    action:
    - data:
        message: request_location_update
      service: notify.devices
    mode: single
  - id: '1597910341178'
    alias: Bathroom - Lights
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_multisensor_motion_sensor_status
    - entity_id: binary_sensor.shower_occupied
      platform: state
    - platform: state
      entity_id: sensor.bathroom_multisensor_humidity_air
    - platform: state
      entity_id: input_boolean.sleep_mode
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.bathroom_multisensor_motion_sensor_status
          state: 'on'
        - condition: state
          entity_id: binary_sensor.shower_occupied
          state: 'off'
        - condition: state
          entity_id: input_boolean.sleep_mode
          state: 'on'
        sequence:
        - brightness_pct: 1
          device_id: 60e1897679ac4f67b0b709ced3652c8e
          domain: light
          entity_id: light.bathroom_lamp
          type: turn_on
      - conditions:
        - condition: or
          conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.sleep_mode
              state: 'off'
            - condition: state
              entity_id: binary_sensor.bathroom_multisensor_motion_sensor_status
              state: 'on'
          - condition: state
            entity_id: binary_sensor.shower_occupied
            state: 'on'
        sequence:
        - brightness_pct: 100
          device_id: 60e1897679ac4f67b0b709ced3652c8e
          domain: light
          entity_id: light.bathroom_lamp
          type: turn_on
      - conditions:
        - condition: state
          entity_id: binary_sensor.bathroom_multisensor_motion_sensor_status
          state: 'off'
          for: 00:08:00
        - condition: state
          entity_id: binary_sensor.shower_occupied
          state: 'off'
        sequence:
        - service: light.turn_off
          data: {}
          entity_id: light.bathroom
      default: []
    mode: restart
  - id: '1598895158496'
    alias: Kitchen - Lights
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_trisensor_motion
    - platform: state
      entity_id: sun.sun
    - platform: state
      entity_id: binary_sensor.kitchen_bright
    - platform: state
      entity_id: input_number.kitchen_lux_level
    - platform: state
      entity_id: sensor.kitchen_trisensor_illuminance
    - platform: state
      entity_id: binary_sensor.kitchen_camera_motion
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.kitchen_trisensor_motion
          state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.kitchen_bright
            state: 'off'
          - condition: state
            entity_id: sun.sun
            state: below_horizon
        sequence:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.kitchen
      default:
      - service: light.turn_off
        data: {}
        entity_id: light.kitchen
    mode: restart
  - id: Study_Lights
    alias: Study - Lights
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.study_trisensor_motion
    - entity_id: binary_sensor.study_bright
      platform: state
    - platform: state
      entity_id: sun.sun
    - platform: state
      entity_id: binary_sensor.starrunner_active
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.study_trisensor_motion
          state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.study_bright
            state: 'off'
          - condition: state
            entity_id: sun.sun
            state: below_horizon
        sequence:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.study
      default:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.study_trisensor_motion
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.starrunner_active
            state: 'off'
          - condition: state
            entity_id: binary_sensor.starrunner_active
            state: unavailable
      - service: light.turn_off
        data: {}
        entity_id: light.study
    mode: restart
  - id: Lounge_Lights
    alias: Lounge - Lights
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.lounge_trisensor_motion
    - entity_id: media_player.lounge_tv
      platform: state
    - entity_id: binary_sensor.lounge_bright
      platform: state
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.lounge_trisensor_motion
          state: 'on'
        - condition: state
          entity_id: media_player.lounge_tv
          state: 'off'
        - condition: state
          entity_id: binary_sensor.lounge_bright
          state: 'off'
        sequence:
        - data:
            brightness_pct: 100
          service: light.turn_on
          target:
            entity_id: light.lounge
      - conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.lounge_tv
            state: 'off'
        - condition: state
          entity_id: binary_sensor.lounge_bright
          state: 'off'
        sequence:
        - data:
            brightness_pct: 30
          service: light.turn_on
          target:
            entity_id: light.lounge
      - conditions:
        - condition: state
          entity_id: binary_sensor.lounge_bright
          state: 'on'
        sequence:
        - data: {}
          entity_id: light.lounge
          service: light.turn_off
      default:
      - service: light.turn_off
        data: {}
        entity_id: light.lounge
    mode: restart
  - id: Toilet_Lights
    alias: Toilet - Lights
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.toilet_trisensor_motion
    - platform: state
      entity_id: binary_sensor.toilet_bright
    - platform: state
      entity_id: sun.sun
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.toilet_trisensor_motion
          state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: sun.sun
            state: below_horizon
          - condition: state
            entity_id: binary_sensor.toilet_bright
            state: 'off'
        sequence:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.toilet
      default:
      - service: light.turn_off
        data: {}
        entity_id: light.toilet
    mode: restart
  - id: '1599502272442'
    alias: Arm/Disarm Smart Home
    description: ''
    trigger:
    - entity_id: binary_sensor.people_home
      platform: state
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.people_home
          state: 'on'
        sequence:
        - scene: scene.all_on
      default:
      - scene: scene.all_off
      - data: {}
        entity_id: media_player.bedroom_tv,media_player.lounge_tv
        service: media_player.turn_off
    mode: single
  - id: Entrance_Lights
    alias: Entrance - Lights
    description: ''
    trigger:
    - entity_id: binary_sensor.entrance_door_door_state
      platform: state
      to: 'on'
    - entity_id: binary_sensor.entrance_door_door_state
      for: 00:00:30
      platform: state
      to: 'off'
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.entrance_door_door_state
          state: 'on'
        - condition: state
          entity_id: sun.sun
          state: below_horizon
        sequence:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.entrance
      default:
      - service: light.turn_off
        data: {}
        entity_id: light.entrance
    mode: restart
  - id: Hall_Lights
    alias: Hall - Lights
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.hall_trisensor_motion
    - platform: state
      entity_id: input_boolean.sleep_mode
    - platform: state
      entity_id: binary_sensor.hall_bright
    condition: []
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.hall_trisensor_motion
          state: 'on'
        - condition: state
          entity_id: input_boolean.sleep_mode
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: sun.sun
            state: below_horizon
          - condition: state
            entity_id: binary_sensor.hall_bright
            state: 'off'
        sequence:
        - service: light.turn_on
          data:
            brightness_pct: 60
          target:
            entity_id: light.hall
      - conditions:
        - condition: state
          entity_id: binary_sensor.hall_trisensor_motion
          state: 'on'
        - condition: state
          entity_id: input_boolean.sleep_mode
          state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: sun.sun
            state: below_horizon
          - condition: state
            entity_id: binary_sensor.hall_bright
            state: 'off'
        sequence:
        - service: light.turn_on
          data:
            brightness_pct: 1
          target:
            entity_id: light.hall
      default:
      - service: light.turn_off
        data: {}
        entity_id: light.hall
    mode: restart
  - id: '1599591734863'
    alias: Timer Test
    description: ''
    trigger:
    - entity_id: binary_sensor.seb_phone_alarm
      platform: state
      to: 'on'
    condition: []
    action:
    - data: {}
      service: notify.mobile_app_in2023
    mode: single
  - id: '1600767215396'
    alias: Lounge - Camera
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.lounge_bright
    - platform: state
      entity_id: sun.sun
    - platform: state
      entity_id: light.lounge
    condition: []
    action:
    - choose:
      - conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: light.lounge
            state: 'on'
          - condition: state
            entity_id: sun.sun
            state: above_horizon
        sequence:
        - service: switch.turn_off
          data: {}
          entity_id: switch.loungecam_ir
      default:
      - service: switch.turn_on
        data: {}
        entity_id: switch.loungecam_ir
    mode: single
  - id: '1607903674633'
    alias: Zone Notification
    description: ''
    use_blueprint:
      path: homeassistant/notify_leaving_zone.yaml
      input:
        person_entity: person.laura_ward
        notify_device: a7476c800b5711eb974f83193b2e2ce2
        zone_entity: zone.work
  - id: '1607903867651'
    alias: Send a camera snapshot when motion is detected
    description: ''
    use_blueprint:
      path: vorion/send-camera-snapshot-notification-on-motion.yaml
      input:
        delay: '0'
        motion_sensor: binary_sensor.front_door_motion
        camera: camera.front_door
        notify_device: a7476c800b5711eb974f83193b2e2ce2
  - id: '1609590164306'
    alias: Heating
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.people_home
      to: 'on'
    - platform: state
      entity_id: input_number.target_temperature
    condition:
    - condition: state
      entity_id: binary_sensor.people_home
      state: 'on'
    action:
    - service: climate.turn_on
      data: {}
      entity_id: climate.central
    - service: climate.set_temperature
      data:
        entity_id: climate.central
        temperature: 19
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.study
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.bedroom
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.bathroom
        temperature: '{{ states(''input_number.target_temperature'') | float }}'
        hvac_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.toilet
        temperature: 10
        hvac_mode: heat
    mode: single
  - id: '1609590240334'
    alias: Heating Inactive
    description: ''
    trigger:
    - platform: time
      at: input_datetime.heating_inactive
    - platform: state
      entity_id: binary_sensor.people_home
      to: 'no'
    condition: []
    action:
    - service: climate.set_hvac_mode
      data:
        entity_id: all
        hvac_mode: 'off'
    mode: single
  - id: '1609698123494'
    alias: Bin Reminder
    description: ''
    trigger:
    - platform: template
      value_template: '{{ is_state(''sensor.date_time'', (strptime(state_attr(''sensor.bin_collection_data'',
        ''date''),''%Y-%m-%dT%H:%M:%SZ'') - timedelta( hours = 5 )).strftime( ''%Y-%m-%d,
        %H:%M'')) }}'
    condition: []
    action:
    - service: notify.mobiles
      data:
        message: '{{state_attr(''sensor.bin_collection'', ''Reminder'') }}'
        data:
          ttl: 0
          priority: high
    mode: single
