{
    "version": 1,
    "key": "lovelace.lovelace_testing",
    "data": {
        "config": {
            "button_card_templates": {
                "base": {
                    "aspect_ratio": "1/1",
                    "tap_action": {
                        "action": "toggle"
                    },
                    "custom_fields": {
                        "grid": {
                            "card": {
                                "type": "custom:layout-card",
                                "layout_type": "grid",
                                "layout": {
                                    "grid-template-columns": "repeat(3, 1fr)",
                                    "grid-template-rows": "repeat(2, 1fr)"
                                }
                            }
                        }
                    },
                    "styles": {
                        "grid": [
                            {
                                "grid-template-columns": "repeat(3, 1fr)"
                            },
                            {
                                "grid-template-rows": "repeat(4, 1fr)"
                            },
                            {
                                "grid-template-areas": "\"title title title\"\n\"grid  grid  grid \"\n\"grid  grid  grid \"\n\"light light light\"\n"
                            }
                        ],
                        "card": [
                            {
                                "background-color": "rgba(150, 150, 150, 0.1)"
                            },
                            {
                                "backdrop-filter": "blur(0.4em)"
                            },
                            {
                                "box-shadow": "0 0 0.5rem rgba(0,0,0,0.2)"
                            },
                            {
                                "padding": 0
                            },
                            {
                                "border-radius": "0.8rem"
                            }
                        ]
                    }
                },
                "title": {
                    "variables": {
                        "name": "Study",
                        "icon": "mdi:desk-lamp",
                        "entity": "input_boolean.area_study_automations"
                    },
                    "custom_fields": {
                        "title": {
                            "card": {
                                "type": "custom:button-card",
                                "icon": "[[[ return variables.icon ]]]",
                                "name": "[[[ return variables.name ]]]",
                                "entity": "[[[ return variables.entity ]]]",
                                "state": [
                                    {
                                        "value": "off",
                                        "color": "var(--color-red)"
                                    },
                                    {
                                        "value": "on",
                                        "color": "white"
                                    }
                                ],
                                "styles": {
                                    "card": [
                                        {
                                            "background": "none"
                                        },
                                        {
                                            "border-radius": 0
                                        }
                                    ],
                                    "name": [
                                        {
                                            "font-size": "1.8rem"
                                        },
                                        {
                                            "justify-self": "start"
                                        },
                                        {
                                            "padding": "0.8rem 0 0 0"
                                        }
                                    ],
                                    "icon": [
                                        {
                                            "padding": "0.8rem 0 0 0"
                                        },
                                        {
                                            "width": "50%"
                                        }
                                    ],
                                    "grid": [
                                        {
                                            "grid-template-columns": "repeat(3, 1fr)"
                                        },
                                        {
                                            "grid-template-areas": "\"i n n\"\n"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "light": {
                    "variables": {
                        "light": "light.study_lights"
                    },
                    "custom_fields": {
                        "light": {
                            "card": {
                                "type": "custom:slider-button-card",
                                "entity": "[[[ return variables.light ]]]",
                                "name": "Lights",
                                "compact": true,
                                "slider": {
                                    "direction": "left-right",
                                    "background": "gradient",
                                    "use_state_color": true
                                },
                                "action_button": {
                                    "show": true,
                                    "mode": "custom",
                                    "show_spinner": true,
                                    "tap_action": {
                                        "action": "toggle"
                                    }
                                }
                            }
                        }
                    },
                    "styles": {
                        "custom_fields": {
                            "light": [
                                {
                                    "height": "100%"
                                },
                                {
                                    "align-self": "end"
                                }
                            ]
                        }
                    }
                },
                "bright": {
                    "variables": {
                        "bright": "binary_sensor.area_study_bright"
                    },
                    "custom_fields": {
                        "grid": {
                            "card": {
                                "cards": [
                                    {
                                        "type": "custom:button-card",
                                        "entity": "[[[ return variables.bright ]]]",
                                        "icon": "mdi:white-balance-sunny",
                                        "color": "[[[ if (states[variables.bright].state == 'on') return 'var(--color-yellow)'; return 'var(--disabled-text-color)'; ]]]",
                                        "name": "[[[ return states[variables.bright].attributes.current_illuminance + \"Lx\" ]]]",
                                        "styles": {
                                            "card": [
                                                {
                                                    "background": "none"
                                                },
                                                {
                                                    "border-radius": 0
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "motion": {
                    "variables": {
                        "occupied": "binary_sensor.area_study_occupied"
                    },
                    "custom_fields": {
                        "grid": {
                            "card": {
                                "cards": [
                                    {
                                        "type": "custom:button-card",
                                        "entity": "[[[ return variables.occupied ]]]",
                                        "icon": "mdi:walk",
                                        "color": "[[[ if (states[variables.occupied].state == 'on') return 'var(--color-green)'; return 'var(--disabled-text-color)'; ]]]",
                                        "name": "[[[\n  return states[variables.occupied].attributes.probability * 100 + '%';\n]]]\n",
                                        "styles": {
                                            "card": [
                                                {
                                                    "background": "none"
                                                },
                                                {
                                                    "border-radius": 0
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "temp": {
                    "variables": {
                        "climate": "climate.area_study_climate",
                        "temp": "sensor.area_study_temperature",
                        "temp_trend": "binary_sensor.area_study_temperature_trend"
                    },
                    "custom_fields": {
                        "grid": {
                            "card": {
                                "cards": [
                                    {
                                        "type": "custom:button-card",
                                        "entity": "[[[ return variables.climate ]]]",
                                        "icon": "mdi:thermometer",
                                        "name": "[[[ return states[variables.temp].state + '/' + states[variables.climate].attributes.temperature + '\u00b0C'; ]]]",
                                        "color": "[[[ if (states[variables.temp_trend].state == 'on') return 'var(--color-orange)'; return 'var(--disabled-text-color)'; ]]]",
                                        "styles": {
                                            "card": [
                                                {
                                                    "background": "none"
                                                },
                                                {
                                                    "border-radius": 0
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "person": {
                    "template": [
                        "base",
                        "circle"
                    ],
                    "state_display": "[[[ return variables.state === 'home' ? 'Ja' : 'Nej'; ]]]\n",
                    "triggers_update": "sensor.time",
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "clip-path": "circle()"
                                },
                                {
                                    "width": "79%"
                                },
                                {
                                    "pointer-events": "none"
                                },
                                {
                                    "display": "flex"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[ return entity === undefined || `<img src=\"${states[entity.entity_id].attributes.entity_picture}\" width=\"100%\">`; ]]]\n",
                        "circle": "[[[\n  const time = c => {\n    const s = (c / 1000);\n    const m = (c / (1000 * 60));\n    const h = (c / (1000 * 60 * 60));\n    const d = (c / (1000 * 60 * 60 * 24));\n    if (s < 60) {\n      return parseInt(s) + 's';\n    } else if (m < 60) {\n      return parseInt(m) + 'm';\n    } else if (h < 24) {\n      return parseInt(h) + 'h';\n    } else {\n      return parseInt(d) + 'd';\n    }\n  };\n  let last_changed = entity === undefined || time(Date.now() - Date.parse(states[entity.entity_id].last_changed));\n  const stroke_color = variables.state === 'home' ? '#b2b2b2' : '#313638';\n  const fill_color = variables.state === 'home' ? 'none' : '#FFFFFF08';\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        circle {\n          transform: none;\n          transform-origin: none;\n          stroke-dasharray: none;\n          stroke-dashoffset: none;\n        }\n      </style>\n      <circle cx=\"25\" cy=\"25\" r=\"20.5\" stroke=\"${stroke_color}\" stroke-width=\"1.5\" fill=\"${fill_color}\" />\n      <text x=\"50%\" y=\"54%\" fill=\"#8d8e90\" font-size=\"14\" text-anchor=\"middle\" alignment-baseline=\"middle\" dominant-baseline=\"middle\">${last_changed}</text>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "base_media": {
                    "tap_action": {
                        "action": "[[[\n  return !(variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby') ? 'call-service' : 'none';\n]]]\n",
                        "service": "media_player.media_play_pause",
                        "service_data": {
                            "entity_id": "[[[ return entity === undefined || entity.entity_id; ]]]\n"
                        }
                    },
                    "double_tap_action": {
                        "action": "call-service",
                        "service": "[[[ return variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ? 'media_player.turn_on' : 'media_player.turn_off'; ]]]\n",
                        "service_data": {
                            "entity_id": "[[[ return entity === undefined || entity.entity_id; ]]]\n"
                        }
                    },
                    "styles": {
                        "card": [
                            {
                                "color": "[[[\n  var entity_picture = entity === undefined || entity.attributes.entity_picture;\n  if (variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||\n    variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined) {\n    return 'rgba(255, 255, 255, 0.3)';\n  }\n  return (variables.state != 'off' && variables.state != 'idle' && variables.state != 'standby') && (entity_picture == null) ? 'rgba(0, 0, 0, 0.6)' : '#efefef';\n]]]\n"
                            },
                            {
                                "text-shadow": "[[[\n  const entity_picture = entity === undefined || entity.attributes.entity_picture;\n  return entity_picture == null ? 'none' : '1px 1px 5px rgba(18, 22, 23, 0.9)';\n]]]\n"
                            }
                        ]
                    }
                },
                "media": {
                    "template": [
                        "base",
                        "base_media"
                    ],
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "70%"
                                },
                                {
                                    "fill": "#9da0a2"
                                },
                                {
                                    "opacity": "[[[\n  const entity_picture = entity === undefined || entity.attributes.entity_picture;\n  return entity_picture == null ? 1 : 0;\n]]]\n"
                                }
                            ]
                        },
                        "card": [
                            {
                                "background-color": "none"
                            },
                            {
                                "background-size": "cover"
                            },
                            {
                                "background-image": "[[[\n  const entity_picture = entity === undefined || entity.attributes.entity_picture;\n  if (variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||\n    variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined) {\n    return 'linear-gradient(0deg, rgba(115, 115, 115, 0.2) 0%, rgba(115, 115, 115, 0.2) 100%)';\n  }\n  return (variables.state != 'off' && variables.state != 'idle' && variables.state != 'standby') && (entity_picture == null) ? \n    'linear-gradient(0deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.8) 100%)' : \n    'linear-gradient(0deg, rgba(0,0,0,.8) 0%, rgba(0,0,0,0) 100%), url(' + entity_picture + ')';\n]]]\n"
                            }
                        ]
                    }
                },
                "conditional_media": {
                    "template": [
                        "base",
                        "base_media"
                    ],
                    "state_display": "[[[\n  if (entity.attributes.media_title === 'Nothing playing' || entity.attributes.media_title === 'No title' && variables.state === 'paused') {\n    return 'Inget spelas';\n  }\n  return entity.attributes.media_title === 'No title' && variables.state === 'playing' ? 'Ingen titel' : entity.attributes.media_title;\n]]]\n",
                    "custom_fields": {
                        "blur": "[[[\n  if (entity.attributes.entity_picture !== undefined) return '<div></div>';\n]]]\n",
                        "overlay": "[[[ \n  if (entity.attributes.entity_picture === undefined && entity.state !== 'idle' && entity.state !== 'unavailable') return '<div></div>';\n]]]\n",
                        "media_image": "<div></div>\n",
                        "play_pause": "[[[\n  const style = `\n    <style>\n      .scale-up {\n        animation: scale-up 0.3s;\n        cubic-bezier(.05, .5, .3, 1) 1;\n        transform-origin: center center;\n      }\n      @keyframes scale-up {\n        0% {\n          opacity: 0;\n          transform: scale(0);\n        }\n        100% {\n          opacity: 1;\n          transform: scale(1);\n        }\n      }\n    </style>\n  `;\n  if (variables.state === 'playing') {\n    return `\n      <svg viewBox=\"0 0 166 166\">${style}\n        <path class=\"scale-up\" d=\"M0 0h59.9v166H0zm106.1 0H166v166h-59.9z\"/>\n      </svg>\n    `;\n  }\n  if (variables.state === 'paused') {\n    return `\n      <svg viewBox=\"0 0 166 166\">${style}\n        <path class=\"scale-up\" d=\"M0 0l166 83L0 166z\"/>\n      </svg>\n    `;\n  }\n]]]\n"
                    },
                    "styles": {
                        "name": [
                            {
                                "z-index": 3
                            },
                            {
                                "margin-bottom": "-1%"
                            }
                        ],
                        "state": [
                            {
                                "z-index": 3
                            }
                        ],
                        "card": [
                            {
                                "padding": "5%"
                            },
                            {
                                "border-radius": "calc(var(--custom-button-card-border-radius) / 2)"
                            },
                            {
                                "backdrop-filter": "blur(0)"
                            }
                        ],
                        "custom_fields": {
                            "blur": [
                                {
                                    "z-index": 2
                                },
                                {
                                    "top": "75.5%"
                                },
                                {
                                    "left": "0%"
                                },
                                {
                                    "width": "100%"
                                },
                                {
                                    "height": "26%"
                                },
                                {
                                    "position": "absolute"
                                },
                                {
                                    "background-color": "rgba(0, 0, 0, 0.2)"
                                },
                                {
                                    "backdrop-filter": "blur(0.4em)"
                                },
                                {
                                    "-webkit-backdrop-filter": "blur(0.4em)"
                                }
                            ],
                            "overlay": [
                                {
                                    "z-index": 2
                                },
                                {
                                    "opacity": 1
                                },
                                {
                                    "top": "75.5%"
                                },
                                {
                                    "left": "0%"
                                },
                                {
                                    "width": "100%"
                                },
                                {
                                    "height": "26%"
                                },
                                {
                                    "position": "absolute"
                                },
                                {
                                    "background-color": "rgba(255, 255, 255, 0.8)"
                                }
                            ],
                            "media_image": [
                                {
                                    "z-index": 1
                                },
                                {
                                    "top": 0
                                },
                                {
                                    "left": 0
                                },
                                {
                                    "width": "100%"
                                },
                                {
                                    "height": "100%"
                                },
                                {
                                    "position": "absolute"
                                },
                                {
                                    "background-size": "cover"
                                },
                                {
                                    "background-image": "[[[ \n  return entity.attributes.entity_picture === undefined ? 'none' : `url(${entity.attributes.entity_picture})`;\n]]]\n"
                                }
                            ],
                            "play_pause": [
                                {
                                    "z-index": 3
                                },
                                {
                                    "top": 0
                                },
                                {
                                    "right": 0
                                },
                                {
                                    "bottom": 0
                                },
                                {
                                    "left": 0
                                },
                                {
                                    "margin": "auto"
                                },
                                {
                                    "width": "21%"
                                },
                                {
                                    "height": "21%"
                                },
                                {
                                    "position": "absolute"
                                },
                                {
                                    "fill": "#dedede"
                                },
                                {
                                    "filter": "[[[\n  const entity_picture = entity === undefined || entity.attributes.entity_picture;\n  return entity_picture == null ? 'none' : 'drop-shadow(0 0 1.3vw rgba(0,0,0,0.7))';\n]]]\n"
                                }
                            ],
                            "icon": [
                                {
                                    "z-index": 3
                                },
                                {
                                    "width": "29%"
                                },
                                {
                                    "fill": "[[[ \n  return variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||\n  variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined ? \n    '#9da0a2' : \n    'rgba(255, 255, 255, 0.8)';\n]]]\n"
                                }
                            ]
                        }
                    }
                },
                "recently_downloaded": {
                    "name": "Senast nedladdat",
                    "state_display": "[[[\n  if (entity != undefined) {\n    const data = states[entity.entity_id].attributes.data;\n    const number = data[1].number == undefined ? '(' + data[1].aired.split('-')[0] + ')' : data[1].number;\n    return `${data[1].title} ${number}`;\n  }\n  return 'Ok\u00e4nd';\n]]]\n",
                    "custom_fields": {
                        "blur": "[[[ return entity === undefined || '<div></div>'; ]]]\n"
                    },
                    "styles": {
                        "custom_fields": {
                            "media_image": [
                                {
                                    "background-position": "center center"
                                },
                                {
                                    "background-image": "[[[ return entity === undefined || `url(${states[entity.entity_id].attributes.data[1].fanart})`; ]]]\n"
                                }
                            ],
                            "overlay": [
                                {
                                    "display": "none"
                                }
                            ]
                        },
                        "card": [
                            {
                                "color": "[[[ return entity === undefined ? 'rgba(255, 255, 255, 0.3)' : '#efefef'; ]]]\n"
                            },
                            {
                                "text-shadow": "[[[ return entity === undefined ? 'none' : '1px 1px 5px rgba(18, 22, 23, 0.9)'; ]]]\n"
                            }
                        ]
                    }
                },
                "lock": {
                    "tap_action": {
                        "loader": "[[[\n  let elt = this.shadowRoot;\n  if (states[\"lock.dator\"].state === \"locked\") {\n    elt.getElementById(\"lock\").classList.add(\"locked\");\n    window.setTimeout(() => {\n      elt.getElementById(\"lock\").classList.remove(\"locked\");\n    }, 1100);\n  } else {\n    // duplicate of \"loader\" template\n    const loader = (id, style, timeout) => {\n      if (elt.getElementById(id)) {\n        elt.getElementById(id).style.display = style;\n        window.setTimeout(() => {\n          elt.getElementById(id).style.display = timeout;\n        }, 20000);\n      }\n    };\n    loader(\"circle\", \"none\", \"initial\");\n    loader(\"loader\", \"initial\", \"none\");\n  }\n]]]\n"
                    },
                    "custom_fields": {
                        "circle": "[[[\n  const state = states['script.home_leave'].state === 'on' ? 'locked' : null;\n  if (states['lock.dator'].state === 'locked') {\n    return `\n      <svg viewBox=\"0 0 50 50\">\n        <style>\n          @keyframes locked {\n            from,\n            to {\n              transform: translateX(0);\n            }\n            10%,\n            30%,\n            50%,\n            70%,\n            90% {\n              transform: translateX(-8%);\n            }\n            20%,\n            40%,\n            60%,\n            80% {\n              transform: translateX(8%);\n            }\n          }\n          .locked {\n            animation: locked 1.1s;\n          }\n        </style>\n        <path id=\"lock\" class=\"${state}\" d=\"M8.2 22.6h2.4v-7.2C10.6 7.5 17.1 1 25 1s14.4 6.4 14.4 14.4v7.2h2.4V49H8.2m26.4-26.4v-7.2c0-5.3-4.3-9.6-9.6-9.6s-9.6 4.3-9.6 9.6v7.2\"/>\n      </svg>\n    `;\n  }\n]]]\n"
                    },
                    "styles": {
                        "custom_fields": {
                            "circle": [
                                {
                                    "width": "45%"
                                },
                                {
                                    "fill": "var(--state-icon-color)"
                                },
                                {
                                    "margin": "0 2% 0 0"
                                },
                                {
                                    "justify-self": "end"
                                },
                                {
                                    "opacity": 1
                                }
                            ]
                        }
                    }
                },
                "laundry": {
                    "show_icon": false,
                    "show_name": false,
                    "show_state": true,
                    "tap_action": {
                        "services": "[[[\n  hass.callService('timer', 'cancel', {\n    entity_id: entity.entity_id\n  });\n  hass.callService('timer', 'start', {\n    entity_id: entity.entity_id\n  });\n]]]\n"
                    },
                    "hold_action": {
                        "services": "[[[\n  hass.callService('timer', 'cancel', {\n    entity_id: entity.entity_id\n  });\n  hass.callService('input_boolean', 'turn_off', {\n    entity_id: 'input_boolean.laundry_display'\n  });\n]]]\n"
                    },
                    "styles": {
                        "card": [
                            {
                                "background": "#202a2f30"
                            },
                            {
                                "border-radius": "0.7vw"
                            },
                            {
                                "border": "0.2vw solid #292c2e"
                            }
                        ],
                        "state": [
                            {
                                "font-size": "2.7vw"
                            },
                            {
                                "font-family": "SF Mono"
                            },
                            {
                                "opacity": 0.65
                            },
                            {
                                "padding": "0.55vw 1.2vw 0.5vw 1.2vw"
                            }
                        ]
                    }
                },
                "icon_name": {
                    "size": "1.4em",
                    "color": "#9da0a2",
                    "styles": {
                        "grid": [
                            {
                                "grid-template-areas": "\"i n\""
                            },
                            {
                                "grid-column-gap": "0.3em"
                            }
                        ],
                        "name": [
                            {
                                "font-size": "1.06em"
                            },
                            {
                                "letter-spacing": "0.015em"
                            }
                        ],
                        "card": [
                            {
                                "color": "#9da0a2"
                            },
                            {
                                "border-radius": "0.6em"
                            },
                            {
                                "padding": "1em 1.4em 1em 1.2em"
                            },
                            {
                                "width": "100%"
                            },
                            {
                                "font-size": "1.06em"
                            },
                            {
                                "font-weight": 500
                            },
                            {
                                "letter-spacing": "0.015em"
                            },
                            {
                                "background": "#FFFFFF10"
                            }
                        ]
                    }
                },
                "icon_only": {
                    "color": "#9da0a2",
                    "styles": {
                        "card": [
                            {
                                "color": "#9da0a2"
                            },
                            {
                                "border-radius": "0.6em"
                            },
                            {
                                "width": "4em"
                            },
                            {
                                "height": "3.7em"
                            },
                            {
                                "background": "#FFFFFF10"
                            }
                        ]
                    }
                },
                "color_light": {
                    "styles": {
                        "card": [
                            {
                                "border-radius": "50%"
                            },
                            {
                                "height": "4em"
                            },
                            {
                                "width": "4em"
                            },
                            {
                                "margin": "4px"
                            }
                        ]
                    }
                },
                "icon_plex": {
                    "custom_fields": {
                        "icon": "<svg viewBox=\"0 0 50 50\">\n  <path d=\"M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z\" fill=\"#282a2d\"/>\n  <path d=\"M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z\" fill=\"#e5a00d\"/>\n</svg>\n"
                    }
                },
                "icon_apple_tv": {
                    "custom_fields": {
                        "icon": "<svg viewBox=\"0 0 50 50\">\n  <path d=\"M25.2 49.7l-13.7-.1c-2.4 0-4.6-.8-6.5-2.2-2-1.6-3.6-3.6-4.3-6.2-.2-1-.2-1.9-.3-3V11.5C.5 7.9 1.9 5 4.8 2.7 6.2 1.6 7.8.8 9.6.5c.5-.1.9-.1 1.4-.1L27.5.3l10.9.1c2.6 0 4.8.8 6.7 2.4 2.1 1.7 3.7 3.9 4.2 6.6l.2 2.4.1 20.5-.1 6.7c-.1 2.2-.9 4.2-2.2 5.9-1.7 2.2-4 3.8-6.8 4.4-.6.1-1.2.2-1.9.2-.1.1-13.4.2-13.4.2zm-4-27.8c-.9-1.2-2.2-1.6-3.7-1.2-.4.1-.8.2-1.2.4-.3.1-.6.1-.8 0-.4-.1-.8-.3-1.2-.4-.3-.1-.7-.1-1-.1-1.5.2-2.4 1.1-3 2.6-.4 1.1-.3 2.2 0 3.5.4 1.5 1 2.9 2.1 4 .5.6 1.2.9 2 .6 1.1-.5 2.2-.5 3.4 0 .8.3 1.5 0 2.1-.6.7-.8 1.1-1.8 1.6-2.8v-.2c-1-.6-1.7-1.4-1.8-2.7-.2-1.4.5-2.4 1.5-3.1zm9.9-1.4c.1.2.1.3.1.4l3.6 9.5c.1.3.3.4.6.4h.7c.6 0 .6 0 .9-.6l3.7-9.4c.1-.1.1-.3.2-.5H39l-2.9 8.3-3.1-8.3-1.9.2zM27.3 18l-1.3.4c-.5.2-.5.2-.6.7v1.4h-1.6l.1 1.4h1.5v5c0 .7.1 1.4.2 2.1.1.5.3 1 .8 1.4.8.6 2.6.7 3.5.2l-.1-1.2h-1.3c-.5 0-.9-.3-1-.8-.1-.3-.2-.6-.2-1v-5.8H30c0-.5.1-1 0-1.4h-2.7V18zm-8.8-.9c-1.9.3-3 2-2.7 3.2 1.4.2 2.9-1.7 2.7-3.2z\"/>\n</svg>\n"
                    }
                },
                "icon_spotify": {
                    "custom_fields": {
                        "icon": "<svg viewBox=\"0 0 50 50\">\n  <path d=\"M25 .3C11.4.3.3 11.4.3 25S11.4 49.7 25 49.7 49.7 38.6 49.7 25 38.6.3 25 .3zm11.3 35.6c-.4.7-1.4 1-2.1.5-5.8-3.5-13.1-4.3-21.7-2.4-.8.2-1.7-.3-1.8-1.2-.2-.8.3-1.7 1.2-1.8 9.4-2.2 17.5-1.2 24 2.8.6.5.9 1.4.4 2.1zm3.1-6.7c-.6.9-1.7 1.2-2.6.6-6.6-4.1-16.8-5.3-24.6-2.9a1.96 1.96 0 0 1-2.4-1.3 1.96 1.96 0 0 1 1.3-2.4c9-2.7 20.1-1.4 27.7 3.3.8.6 1.1 1.8.6 2.7h0zm.2-7c-8-4.7-21.1-5.2-28.7-2.9-1.2.4-2.5-.3-2.9-1.5s.3-2.5 1.5-2.9c8.7-2.6 23.2-2.1 32.4 3.3 1.1.7 1.5 2.1.8 3.2-.6 1.1-2 1.4-3.1.8h0z\"/>\n</svg>\n"
                    }
                },
                "icon_nest_mini": {
                    "custom_fields": {
                        "icon": "<svg viewBox=\"0 0 50 50\">\n  <path d=\"M49.7 25c0 13.6-11.1 24.7-24.8 24.7C11.3 49.7.3 38.6.3 25S11.4.3 25 .3 49.7 11.4 49.7 25zm-33.9 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3.1 2.3-.9 2.3-2.2h0zm10.8 0c0 1.2.9 2.2 2.2 2.3 1.3 0 2.3-1 2.3-2.2 0-1.3-1-2.3-2.2-2.3-1.3 0-2.3.9-2.3 2.2zm-3.2 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3 0 2.3-.9 2.3-2.2h0zm13 2.2a2.22 2.22 0 0 0 2.2-2.2c0-1.2-1-2.3-2.2-2.3a2.22 2.22 0 0 0-2.2 2.2c0 1.3 1 2.3 2.2 2.3z\" />\n</svg>\n"
                    }
                },
                "icon_hue": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "77%"
                                },
                                {
                                    "margin-left": "-14%"
                                },
                                {
                                    "margin-top": "1%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          0% {\n            transform: scale(0.85);\n          }\n          20% {\n            transform: scale(1.1);\n          }\n          40% {\n            transform: scale(0.95);\n          }\n          60% {\n            transform: scale(1.03);\n          }\n          80% {\n            transform: scale(0.97);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n        .on {\n          animation: on 0.8s;\n          transform-origin: center;\n        }\n      </style>\n      <path fill=\"#9da0a2\" d=\"M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7\"/>\n      <path class=\"${state}\" fill=\"${variables.light_color}\" d=\"M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_shade": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "77%"
                                },
                                {
                                    "margin-left": "-15%"
                                },
                                {
                                    "margin-top": "1%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          0% {\n            transform: scale(0.85);\n          }\n          20% {\n            transform: scale(1.1);\n          }\n          40% {\n            transform: scale(0.95);\n          }\n          60% {\n            transform: scale(1.03);\n          }\n          80% {\n            transform: scale(0.97);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n        .on {\n          animation: on 0.8s;\n          transform-origin: center;\n        }\n      </style>\n      <path fill=\"#9da0a2\" d=\"M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z\"/>\n      <path class=\"${state}\" fill=\"${variables.light_color}\" d=\"M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_tv": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "89%"
                                },
                                {
                                    "margin-top": "-7%"
                                },
                                {
                                    "margin-left": "1%"
                                },
                                {
                                    "fill": "[[[\n  return variables.state === 'on' ? '#616161' : '#9da0a2';\n]]]\n"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const style = `\n    <style>\n      @keyframes on {\n        from {\n          transform: scaleY(0);\n        }\n        to {\n          transform: scaleY(1);\n        }\n      }\n      .on {\n        animation: on 1s;\n        transform-origin: -100% 46%;\n        animation-fill-mode: forwards;\n      }\n      @keyframes off {\n        from {\n          transform: scaleY(1);\n        }\n        to {\n          transform: scaleY(0);\n        }\n      }\n      .off {\n        animation: off 1s;\n        transform-origin: -100% 46%;\n        animation-fill-mode: forwards;\n      }\n    </style>\n  `;\n  const path = `\n    <path d=\"M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z\"/>\n  `;\n  const gradient = `\n    <linearGradient id=\"A\" gradientUnits=\"userSpaceOnUse\" x1=\"5.401\" y1=\"34.714\" x2=\"43.817\" y2=\"11.74\">\n      <stop offset=\"0\" stop-color=\"#64acb7\"/>\n      <stop offset=\"1\" stop-color=\"#7fdbe9\"/>\n    </linearGradient>\n  `;\n  if (variables.state === 'on' && variables.timeout < 2000) {\n    return `\n      <svg viewBox=\"0 0 50 50\"> ${style} ${gradient} \n        <path d=\"M2.9,8h44.3v29.9H2.9V8z\" fill=\"#20262890\"/>\n        <path class=\"on\" d=\"M2.9,8h44.3v29.9H2.9V8z\" fill=\"url(#A)\"/> ${path} \n      </svg>\n    `;\n  }\n  if (variables.state === 'on' && variables.timeout > 2000) {\n    return `\n      <svg viewBox=\"0 0 50 50\"> ${gradient} \n        <path d=\"M2.9,8h44.3v29.9H2.9V8z\" fill=\"#20262890\"/>\n        <path class=\"on\" d=\"M2.9,8h44.3v29.9H2.9V8z\" fill=\"url(#A)\"/> ${path} \n      </svg>\n    `;\n  }\n  if (variables.state === 'off' && variables.timeout < 2000) {\n    return `\n      <svg viewBox=\"0 0 50 50\"> ${style} ${gradient} \n        <path class=\"off\" d=\"M2.9,8h44.3v29.9H2.9V8z\" fill=\"url(#A)\"/> ${path} \n      </svg>\n    `;\n  } else {\n    return `\n      <svg viewBox=\"0 0 50 50\"> ${style} \n        ${path}\n      </svg>\n    `;\n  }\n]]]\n"
                    }
                },
                "icon_ps5": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "88%"
                                },
                                {
                                    "margin-left": "-1%"
                                },
                                {
                                    "margin-top": "-7%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  if (variables.state === 'on' && variables.timeout < 2000) {\n    return `\n      <svg viewBox=\"0 0 50 50\">\n        <style>\n        @keyframes on {\n          50% {\n            transform: translateY(0);\n          }\n          100% {\n            transform: translateY(-45%);\n          }\n        }\n        .on {\n          animation: on 2s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;\n        }\n      </style>\n      <g style=\"clip-path: url(#mask);\">\n        <g class=\"on\">\n          <path fill=\"#00aa9e\" d=\"M49.2 38.9l-75.6-25.1v7.4l75.6 25.2z\"/>\n          <path fill=\"#f3c202\" d=\"M49.2 46.4l-75.6-25.2v7.5l75.6 25.1z\"/>\n          <path fill=\"#326db3\" d=\"M49.2 53.8l-75.6-25.1V51l75.6 25.1zm0-22.3L-26.4 6.4v7.4l75.6 25.1z\"/>\n        </g>\n      </g>\n      <defs>\n        <clipPath id=\"mask\">\n          <path d=\"M47.5 33.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2v-5.7l-5.7.8-4.6 1.6L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 3.3.6 6.2.2 8.9-.7l7.3 4.8L33 41l10.7-4h.1c2.8-1 4-2.5 3.7-3.8zm-31.3 2l-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 7.2-2.7v2.8l-3.2 1.1zm22.5-1.1l-1.9.7-10.2 3.7V36l6.5-2.4 3.8-1.3c4-.9 5.6.5 1.8 1.8z\"/>\n        </clipPath>\n      </defs>\n      <path fill=\"#de0029\" d=\"M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3h0z\"/>\n    </svg>\n  `;\n  }\n  return variables.state === 'on' && variables.timeout > 2000 ? `\n    <svg viewBox=\"0 0 50 50\">\n    <g style=\"clip-path: url(#mask);\">\n      <g style=\"transform: translateY(-45%);\">\n        <path fill=\"#00aa9e\" d=\"M49.2 38.9l-75.6-25.1v7.4l75.6 25.2z\"/>\n        <path fill=\"#f3c202\" d=\"M49.2 46.4l-75.6-25.2v7.5l75.6 25.1z\"/>\n        <path fill=\"#326db3\" d=\"M49.2 53.8l-75.6-25.1V51l75.6 25.1zm0-22.3L-26.4 6.4v7.4l75.6 25.1z\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"mask\">\n        <path d=\"M47.5 33.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2v-5.7l-5.7.8-4.6 1.6L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 3.3.6 6.2.2 8.9-.7l7.3 4.8L33 41l10.7-4h.1c2.8-1 4-2.5 3.7-3.8zm-31.3 2l-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 7.2-2.7v2.8l-3.2 1.1zm22.5-1.1l-1.9.7-10.2 3.7V36l6.5-2.4 3.8-1.3c4-.9 5.6.5 1.8 1.8z\"/>\n      </clipPath>\n    </defs>\n    <path fill=\"#de0029\" d=\"M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3h0z\"/>\n  </svg>\n  ` : `\n    <svg viewBox=\"0 0 50 50\">\n      <path fill=\"#9da0a2\" d=\"M43.8 37h-.1l-10.6 4-4.2 1.6v-4.9l8-2.9 1.9-.7c3.8-1.3 2.2-2.7-1.8-1.9l-3.8 1.3-4.3 1.6v-4.5c3.1-1 6.3-1.6 9.5-1.4 5.3.4 8.7 1.6 9.1 3.9.3 1.4-.9 2.9-3.7 3.9zm-26.7-2.1l-.9.3-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 5-1.9v-4.2l-.6.2L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 2.4.4 4.6.3 6.7-.1v-4.3zm12.4-20V28c5.7 1.7 8.7-.9 8.7-7.6.1-5.7-3.6-9-9.6-10.7l-9.3-2.6v33.8l7.2 2.5.1.1V14.6c.1-1.4 2.9-1.3 2.9.3z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_spot": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "70%"
                                },
                                {
                                    "margin-left": "-8%"
                                },
                                {
                                    "margin-top": "3%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  let state;\n  if (variables.state === 'on' && variables.timeout < 2000) {\n    state = 'on';\n  } \n  if (variables.state === 'off' && variables.timeout < 2000) {\n    state = 'off';\n  }\n  if (variables.state === 'on' && variables.timeout > 2000) {\n    state = 'on_timeout';\n  }\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          0% {\n            transform: rotateZ(0deg);\n            animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);\n          }\n          70% {\n            transform: rotateZ(-15deg);\n            animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n          }\n          75% {\n            transform: rotateZ(-15deg);\n            animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n          }\n          88% {\n            transform: rotateZ(-11deg);\n          }\n          100% {\n            transform: rotateZ(-15deg);\n          }\n        }\n        @keyframes off {\n          0% {\n            transform: rotateZ(-15deg);\n            animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);\n          }\n          70% {\n            transform: rotateZ(0deg);\n            animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n          }\n          75% {\n            transform: rotateZ(0deg);\n            animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n          }\n          88% {\n            transform: rotateZ(-4deg);\n          }\n          100% {\n            transform: rotateZ(0deg);\n          }\n        }\n        .on {\n          animation: on 0.7s;\n          transform-origin: 40% 20%;\n          animation-fill-mode: forwards;\n          animation-delay: -0.1s;\n        }\n        .off {\n          animation: off 0.7s;\n          transform-origin: 40% 20%;\n          animation-fill-mode: forwards;\n        }\n        .on_timeout {\n          transform: rotateZ(-15deg);\n          transform-origin: 40% 20%;\n        }\n      </style>\n      <path style=\"clip-path: url(#mask);\" fill=\"#9da0a2\" d=\"M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z\"/>\n      <defs>\n        <clipPath id=\"mask\">\n          <path class=\"${state}\" d=\"M0 9.1h24l8.3 8.8H50V-9H0z\"/>\n        </clipPath>\n      </defs>\n      <path class=\"${state}\" fill=\"${variables.light_color}\" d=\"M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_imac": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "82%"
                                },
                                {
                                    "margin-left": "1%"
                                },
                                {
                                    "margin-top": "-6%"
                                },
                                {
                                    "fill": "[[[ return variables.state === 'on' ? '#72757c' : '#9da0a2'; ]]]\n"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          from {\n            opacity: 0.5;\n            transform: scale(0.6);\n          }\n          100% {\n            opacity: 1;\n          }\n        }\n        .on {\n          animation: on 0.8s cubic-bezier(0.25, 1, 0.5, 1);\n          transform-origin: center;\n        }\n      </style>\n      <path class=\"${state}\" d=\"M31.9 44.5c-1-.3-1.9.4-1.9-3.7h-9.9c0 4.2-.9 3.4-1.9 3.7s-.2.7-.2.7h14.1s.8-.3-.2-.7zM47.6 4.8H2.5c-1.1 0-2 .9-2 2v30.1c0 1.1.9 2 2 2h45c1.1 0 2-.9 2-2v-30a1.95 1.95 0 0 0-1.9-2.1zm-.7 26.4H3.2V7.6H47v23.6z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_monitors": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "73%"
                                },
                                {
                                    "margin-left": "-9%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const style = `\n  <style>\n    @keyframes cone {\n      35% {\n        transform: scale(0.8);\n        animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);\n      }\n      36% {\n        transform: translateY(0%);\n      }\n      49% {\n        transform: scale(1.25);\n      }\n      63% {\n        transform: scale(0.85);\n        animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);\n      }\n      77% {\n        transform: scale(1.15);\n        animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);\n      }\n      95% {\n        transform: scale(1);\n      }\n    }\n    .cone {\n      animation: cone 1.2s;\n      transform-origin: center;\n    }\n    @keyframes speaker {\n      0% {\n        transform: scale(1);\n      }\n      40% {\n        transform: scale(1);\n      }\n      49% {\n        transform: scale(0.95);\n      }\n      63% {\n        transform: scale(1);\n      }\n      77% {\n        transform: scale(0.95);\n      }\n      100% {\n        transform: scale(1);\n      }\n    }\n    .speaker {\n      animation: speaker 1.3s;\n      transform-origin: center;\n    }\n  </style>\n  `;\n  const paths = `\n  <g class=\"speaker\">\n    <path fill=\"#686868\" d=\"M35.8 46.9H14.2c-1.1 0-2-1-2-2.3V6.7c0-1.3.9-2.3 2-2.3h21.5c1.1 0 2 1 2 2.3v37.9c0 1.2-.9 2.3-1.9 2.3z\"/>\n    <path fill=\"#2a2a2a\" d=\"M39.2 1H10.8C9.4 1 8.3 2.1 8.2 3.5v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3c1.4 0 2.5-1.2 2.6-2.6V3.5c0-1.4-1.1-2.5-2.5-2.5zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4C22.5 8 23.6 7 25 7zm10.2 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6s-.1-1.1-.4-1.9.6-.9.6-.9h19.3c0-.1.8-.1.5.9z\"/>\n  </g>\n  <path class=\"cone\" fill=\"#e5dd00\" d=\"M25 15.7c-6.2 0-11.3 5.1-11.3 11.3S18.8 38.3 25 38.3 36.3 33.2 36.3 27c-.1-6.3-5.1-11.3-11.3-11.3zm0 14.5a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c-.1 1.9-1.5 3.3-3.3 3.3z\"/>\n  `;\n  if (variables.state === 'on' && variables.timeout < 2000) {\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      ${style}\n      ${paths}\n    </svg>\n  `;\n  }\n  return variables.state === 'on' && variables.timeout > 2000 ? `\n    <svg viewBox=\"0 0 50 50\">\n      ${paths}\n    </svg>\n  ` : `\n    <svg viewBox=\"0 0 50 50\">\n      <path fill=\"#9da0a2\" d=\"M25 18.6c-4.6 0-8.4 3.8-8.4 8.4s3.8 8.4 8.4 8.4 8.4-3.8 8.4-8.4-3.7-8.4-8.4-8.4zm0 11.7a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c0 1.8-1.4 3.3-3.3 3.3zM39.2 1H10.9C9.4 1 8.3 2.1 8.3 3.6v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3a2.65 2.65 0 0 0 2.6-2.6v-43C41.7 2 40.5.9 39.2 1zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4S23.7 7 25 7zm10.3 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6l-.4-1.9c-.2-.9.6-.9.6-.9h19.3s.9.1.6.9zM25 38.2c-6.2 0-11.3-5.1-11.3-11.3a11.29 11.29 0 1 1 22.6 0c.1 6.3-5 11.3-11.3 11.3z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_lamp": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "79%"
                                },
                                {
                                    "margin-left": "-16%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          0% {\n            transform: scale(0.85);\n          }\n          20% {\n            transform: scale(1.1);\n          }\n          40% {\n            transform: scale(0.95);\n          }\n          60% {\n            transform: scale(1.03);\n          }\n          80% {\n            transform: scale(0.97);\n          }\n        }\n        .on {\n          animation: on 0.8s;\n          transform-origin: center;\n        }\n      </style>\n      <path fill=\"#9da0a2\" d=\"M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z\"/>\n      <path class=\"${state}\" fill=\"${variables.light_color}\" d=\"M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_air_purifier": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "78%"
                                },
                                {
                                    "margin-left": "-10%"
                                },
                                {
                                    "fill": "[[[ return variables.state === 'on' ? '#5daeea' : '#9da0a2'; ]]]\n"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "<svg viewBox=\"0 0 50 50\">\n  <path d=\"M36.8 1.2v1.7a5.34 5.34 0 0 1-5.3 5.3H18.4a5.34 5.34 0 0 1-5.3-5.3V1.2c-2.6.4-4.7 2.8-4.7 5.6v36.5c0 3.1 2.6 5.7 5.7 5.7h21.8c3.1 0 5.7-2.6 5.7-5.7V6.8c0-2.8-2.1-5.2-4.8-5.6zm-1.7 35.6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3c-.4.2-.8.4-1.4.6-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zM15.7 1.9v-.8h18.6V3c0 1.5-1.2 2.8-2.8 2.8H18.4c-1.5 0-2.8-1.2-2.8-2.8V1.9z\"/>\n</svg>\n"
                    }
                },
                "icon_fan": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "75%"
                                },
                                {
                                    "margin-left": "-3%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const style = `\n  <svg viewBox=\"0 0 50 50\">\n    <style>\n      @keyframes rotate {\n        0% {\n          visibility: visible;\n          transform: rotate(0deg) translateZ(0);\n        }\n        100% {\n          transform: rotate(1080deg) translateZ(0);\n        }\n      }\n      .start {\n        animation: rotate 2.8s ease-in;\n        transform-origin: center;\n        fill: #5daeea;\n        visibility: hidden;\n      }\n      .on_delay {\n        animation: rotate 1.8s linear infinite;\n        transform-origin: center;\n        fill: #5daeea;\n        animation-delay: 2.8s;\n        visibility: hidden;\n        will-change: transform;\n      }\n      .on_no_delay {\n        animation: rotate 1.8s linear infinite;\n        transform-origin: center;\n        fill: #5daeea;\n        will-change: transform;\n      }\n      .on {\n        animation: rotate 1.8s linear forwards;\n        transform-origin: center;\n        fill: #5daeea;\n        visibility: hidden;\n        will-change: transform;\n      }\n      .end {\n        animation: rotate 2.8s;\n        transform-origin: center;\n        fill: #9ca2a5;\n        animation-timing-function: cubic-bezier(.61, 1, .88, 1);\n      }\n    </style>\n  `;\n  const path = `\n  <circle cx=\"25\" cy=\"25\" r=\"6.6\"/>\n  <path d=\"M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z\"/>\n  `;\n  if (variables.state === 'off' && variables.timeout < 2000) {\n  return `${style}<g class=\"end\">${path}</g></svg>`;\n  }\n  if (variables.state === 'off' && variables.timeout > 2000) {\n  return `<svg viewBox=\"0 0 50 50\" fill=\"#9ca2a5\"><g>${path}</g></svg>`;\n  }\n  if (variables.state === 'on' && variables.timeout > 2000) {\n  return `${style}<g class=\"on_no_delay\">${path}</g></svg>`;\n  }\n  if (variables.state === 'on' && variables.timeout < 2000) {\n  return `${style}<g class=\"start\">${path}</g><g class=\"on_delay\">${path}</g></svg>`;\n  }\n]]]\n"
                    }
                },
                "icon_bathroom": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "78%"
                                },
                                {
                                    "margin-left": "-10%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  let state;\n  if (variables.state === 'on' && variables.timeout < 2000) {\n    state = 'on';\n  } \n  if (variables.state === 'off' && variables.timeout < 2000) {\n    state = 'off';\n  }\n  if (variables.state === 'on' && variables.timeout > 2000) {\n    state = 'on_timeout';\n  }\n  return `\n    <svg viewBox=\"0 0 50 50\" fill=\"${variables.light_color}\">\n      <style>\n        @keyframes on {\n          0% {\n            transform: rotateZ(0deg) translate(0%, 0%);\n          }\n          100% {\n            transform: rotateZ(-90deg) translate(-1.5%, 0%);\n          }\n        }\n        @keyframes off {\n          0% {\n            transform: rotateZ(-90deg) translate(-1.5%, 0%);\n          }\n          45% {\n            transform: rotateZ(-40deg);\n          }\n          55% {\n            transform: rotateZ(0deg);\n          }\n          65% {\n            transform: rotateZ(-15deg);\n          }\n          75% {\n            transform: rotateZ(0deg);\n          }\n          85% {\n            transform: rotateZ(-5deg);\n          }\n          95% {\n            transform: rotateZ(0deg);\n          }\n        }\n        .on {\n          animation: on 0.45s;\n          animation-fill-mode: forwards;\n          transform-origin: 45% 41%;\n          transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);\n        }\n        .on_timeout {\n          transform: rotateZ(-90deg) translate(-1.5%, 0%);\n          transform-origin: 45% 41%;\n        }\n        .off {\n          animation: off 1.1s linear;\n          animation-delay: 0.05s;\n          animation-fill-mode: both;\n          transform-origin: 45% 41%;\n        }\n      </style>\n      <path d=\"M12.9 1.2h2.5c1.6 0 2.9 1.3 2.9 2.9v18.6c0 1.4 1.1 2.5 2.4 2.5h20.5c.5 0 1 .4.9 1-.1 2.6-1.2 9.6-10.2 11v7.6c0 .2.2.4.4.4h1.5a1.58 1.58 0 0 1 1.6 1.6v.3a1.58 1.58 0 0 1-1.6 1.6H11a1.58 1.58 0 0 1-1.6-1.6v-.3a1.58 1.58 0 0 1 1.6-1.6h1.6c.2 0 .4-.2.4-.4v-7.6s-5.2-.3-5.2-5.9V4.2c0-1.6 1.3-2.9 2.9-2.9l2.2-.1c0 .1 0 0 0 0z\"/>\n      <path class=\"${state}\" d=\"M22.3 18.8h18.3a1.58 1.58 0 0 1 1.6 1.6v.6a1.58 1.58 0 0 1-1.6 1.6h-19c-.4 0-.7-.3-.8-.7v-2.3c0-.4.3-.7.7-.8h.8z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_fan2": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "75%"
                                },
                                {
                                    "margin-left": "-3%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const path = `\n    <circle cx=\"25\" cy=\"25\" r=\"6.6\"/>\n    <path d=\"M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z\"/>\n  `;\n  const style = `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes rotate {\n          0% {\n            visibility: visible;\n            transform: rotate(0deg) translateZ(0);\n          }\n          100% {\n            transform: rotate(1080deg) translateZ(0);\n          }\n        }\n        .start {\n          animation: rotate 2.8s ease-in;\n          transform-origin: center;\n          fill: #5daeea;\n          visibility: hidden;\n          will-change: transform;\n        }\n        .on {\n          animation: rotate 1.8s linear infinite;\n          transform-origin: center;\n          fill: #5daeea;\n          animation-delay: 2.8s;\n          visibility: hidden;\n          will-change: transform;\n        }\n        .end {\n          animation: rotate 2.8s;\n          transform-origin: center;\n          fill: #9ca2a5;\n          animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);\n          will-change: transform;\n        }\n        .start_timeout {\n          animation: rotate 1.8s linear infinite;\n          transform-origin: center;\n          fill: #5daeea;\n          visibility: hidden;\n          will-change: transform;\n        }\n        .end_timeout {\n          fill: #9ca2a5;\n        }\n      </style>\n  `;\n  if (variables.state === 'on' && variables.timeout < 2000) {\n    return `${style}<g class=\"start\">${path}</g><g class=\"on\">${path}</g></svg>`;\n  }\n  if (variables.state === 'off' && variables.timeout < 2000) {\n    return `${style}<g class=\"end\">${path}</g></svg>`;\n  }\n  if (variables.state === 'on' && variables.timeout > 2000) {\n    return `${style}<g class=\"start_timeout\">${path}</g></svg>`;\n  }\n  if (variables.state === 'off' && variables.timeout > 2000) {\n    return `${style}<g class=\"end_timeout\">${path}</g></svg>`;\n  }\n]]]\n"
                    }
                },
                "icon_closet": {
                    "styles": {
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "80%"
                                },
                                {
                                    "margin-left": "-15%"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const room = 'd=\"M11.4,1.4h27.2v43.1H11.4V1.4z\" fill=\"#bcbcbc\"';\n  const door = 'd=\"M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z\"';\n  if (variables.state === 'on' && variables.timeout < 2000) {\n    return `\n      <style>\n        .state {\n          animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        }\n        .opacity {\n          animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        }\n        @keyframes state {\n          0% {\n            transform: none;\n            fill: #9da0a2;\n          }\n          100% {\n            transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);\n            fill: #b68349;\n          }\n        }\n        @keyframes opacity {\n          0% {\n            opacity: 0;\n          }\n          100% {\n            opacity: 1;\n          }\n        }\n      </style>\n      <svg viewBox=\"0 0 50 50\">\n        <path class=\"opacity\" ${room}/>\n        <path class=\"state\" ${door}/>\n      </svg>\n    `;\n  }\n  if (variables.state === 'on' && variables.timeout > 2000) {\n    return `\n      <svg viewBox=\"0 0 50 50\">\n        <style>\n          .state_timeout_on {\n            transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);\n            fill: #b68349;\n          }\n        </style>\n        <path ${room}/>\n        <path class=\"state_timeout_on\" ${door}/>\n      </svg>\n    `;\n  }\n  return variables.state === 'off' && variables.timeout < 2000 ? `\n    <style>\n      .state {\n        animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n      }\n      .opacity {\n        animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n      }\n      .reverse {\n        animation-direction: reverse;\n      }\n      @keyframes state {\n        0% {\n          transform: none;\n          fill: #9da0a2;\n        }\n        100% {\n          transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);\n          fill: #b68349;\n        }\n      }\n      @keyframes opacity {\n        0% {\n          opacity: 0;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n    </style>\n    <svg viewBox=\"0 0 50 50\">\n      <path class=\"opacity reverse\" ${room}/>\n      <path class=\"state reverse\" ${door}/>\n    </svg>\n  ` : `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        .state_timeout_off {\n          fill: var(--state-icon-color);\n        }\n      </style>\n      <path class=\"state_timeout_off\" ${door}/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_away": {
                    "state_display": "Auto",
                    "styles": {
                        "card": [
                            {
                                "transition": "all 0.3s ease-out"
                            }
                        ],
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "79%"
                                },
                                {
                                    "fill": "[[[ return variables.state === 'on' ? '#516d82' : '#9da0a2'; ]]]\n"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const state = variables.state === 'on' ? 'on' : null;\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          10%,\n          20%,\n          100% {\n            transform: rotateZ(0deg);\n          }\n          30%,\n          50%,\n          70% {\n            transform: rotateZ(7deg);\n          }\n          90% {\n            transform: rotateZ(3deg);\n          }\n          40%,\n          60%,\n          80% {\n            transform: rotateZ(-7deg);\n          }\n        }\n        .on {\n          animation: on 1.35s cubic-bezier(0.5, 1, 0.89, 1);\n          animation-fill-mode: both;\n          transform-origin: 70% 80%;\n          animation-delay: 0s;\n        }\n      </style>\n      <path class=\"${state}\" d=\"M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                },
                "icon_home": {
                    "state_display": "Auto",
                    "styles": {
                        "card": [
                            {
                                "transition": "all 0.3s ease-out"
                            }
                        ],
                        "custom_fields": {
                            "icon": [
                                {
                                    "width": "70%"
                                },
                                {
                                    "fill": "[[[ return variables.state === 'on' ? '#c7983e' : '#9da0a2'; ]]]\n"
                                }
                            ]
                        }
                    },
                    "custom_fields": {
                        "icon": "[[[\n  const state = variables.state === 'on' ? 'on' : null;\n  return `\n    <svg viewBox=\"0 0 50 50\">\n      <style>\n        @keyframes on {\n          from,\n          20%,\n          40%,\n          60%,\n          80%,\n          to {\n            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n          }\n          0% {\n            transform: scale(0.3);\n          }\n          20% {\n            transform: scale(1.1);\n          }\n          40% {\n            transform: scale(0.9);\n          }\n          60% {\n            transform: scale(1.03);\n          }\n          80% {\n            transform: scale(0.97);\n          }\n          to {\n            transform: scale(1);\n          }\n        }\n        .on {\n          animation: on 1s;\n          transform-origin: center;\n        }\n      </style>\n      <path class=\"${state}\" d=\"M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z\"/>\n    </svg>\n  `;\n]]]\n"
                    }
                }
            },
            "views": [
                {
                    "icon": "mdi:desktop-tower",
                    "path": "study",
                    "title": "Study",
                    "badges": [],
                    "cards": [
                        {
                            "cards": [
                                {
                                    "type": "conditional",
                                    "conditions": [
                                        {
                                            "state": "off",
                                            "entity": "binary_sensor.starrunner_online"
                                        }
                                    ],
                                    "card": {
                                        "type": "button",
                                        "card_mod": {
                                            "class": "noblur"
                                        },
                                        "tap_action": {
                                            "action": "toggle"
                                        },
                                        "show_icon": false,
                                        "name": "Start PC",
                                        "entity": "script.my_computer_wake"
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "conditions": [
                                        {
                                            "entity": "binary_sensor.starrunner_online",
                                            "state": "on"
                                        }
                                    ],
                                    "card": {
                                        "type": "vertical-stack",
                                        "cards": [
                                            {
                                                "type": "horizontal-stack",
                                                "cards": [
                                                    {
                                                        "entity": "sensor.starrunner_cpu_used",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "max": 100,
                                                        "min": 0,
                                                        "name": "CPU",
                                                        "severity": {
                                                            "green": 0,
                                                            "red": 90,
                                                            "yellow": 80
                                                        },
                                                        "type": "gauge",
                                                        "needle": true
                                                    },
                                                    {
                                                        "entity": "sensor.starrunner_ram_used_percent",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "max": 100,
                                                        "name": "RAM",
                                                        "severity": {
                                                            "green": 0,
                                                            "red": 90,
                                                            "yellow": 80
                                                        },
                                                        "type": "gauge",
                                                        "min": 0,
                                                        "needle": true
                                                    },
                                                    {
                                                        "entity": "sensor.starrunner_gpu_used",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "max": 100,
                                                        "min": 0,
                                                        "name": "GPU",
                                                        "severity": {
                                                            "green": 0,
                                                            "red": 90,
                                                            "yellow": 80
                                                        },
                                                        "type": "gauge",
                                                        "needle": true
                                                    },
                                                    {
                                                        "entity": "sensor.starrunner_gpu_temperature",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "max": 100,
                                                        "min": 0,
                                                        "name": "GPU Temp",
                                                        "severity": {
                                                            "green": 0,
                                                            "red": 90,
                                                            "yellow": 80
                                                        },
                                                        "type": "gauge",
                                                        "needle": true
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "horizontal-stack",
                                                "cards": [
                                                    {
                                                        "type": "custom:mini-graph-card",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "color_thresholds": [
                                                            {
                                                                "color": "red",
                                                                "value": 70
                                                            },
                                                            {
                                                                "color": "yellow",
                                                                "value": 50
                                                            },
                                                            {
                                                                "color": "green",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "entities": [
                                                            {
                                                                "entity": "sensor.starrunner_cpu_used"
                                                            }
                                                        ],
                                                        "show": {
                                                            "name": false,
                                                            "icon": false,
                                                            "state": false
                                                        },
                                                        "update_interval": 1,
                                                        "upper_bound": 100
                                                    },
                                                    {
                                                        "type": "custom:mini-graph-card",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "color_thresholds": [
                                                            {
                                                                "color": "red",
                                                                "value": 70
                                                            },
                                                            {
                                                                "color": "yellow",
                                                                "value": 50
                                                            },
                                                            {
                                                                "color": "green",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "entities": [
                                                            {
                                                                "entity": "sensor.starrunner_gpu_used"
                                                            }
                                                        ],
                                                        "show": {
                                                            "name": false,
                                                            "icon": false,
                                                            "state": false
                                                        },
                                                        "update_interval": 1,
                                                        "upper_bound": 100
                                                    },
                                                    {
                                                        "type": "custom:mini-graph-card",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "color_thresholds": [
                                                            {
                                                                "color": "red",
                                                                "value": 70
                                                            },
                                                            {
                                                                "color": "yellow",
                                                                "value": 50
                                                            },
                                                            {
                                                                "color": "green",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "entities": [
                                                            {
                                                                "entity": "sensor.starrunner_ram_used_percent"
                                                            }
                                                        ],
                                                        "show": {
                                                            "name": false,
                                                            "icon": false,
                                                            "state": false
                                                        },
                                                        "update_interval": 1,
                                                        "upper_bound": 100
                                                    },
                                                    {
                                                        "type": "custom:mini-graph-card",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "color_thresholds": [
                                                            {
                                                                "color": "red",
                                                                "value": 70
                                                            },
                                                            {
                                                                "color": "yellow",
                                                                "value": 50
                                                            },
                                                            {
                                                                "color": "green",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "entities": [
                                                            {
                                                                "entity": "sensor.starrunner_gpu_temperature"
                                                            }
                                                        ],
                                                        "show": {
                                                            "name": false,
                                                            "icon": false,
                                                            "state": false
                                                        },
                                                        "update_interval": 1,
                                                        "upper_bound": 100
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "horizontal-stack",
                                                "cards": [
                                                    {
                                                        "type": "button",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "tap_action": {
                                                            "action": "toggle"
                                                        },
                                                        "entity": "switch.starrunner_lock",
                                                        "name": "Lock",
                                                        "show_icon": false
                                                    },
                                                    {
                                                        "type": "button",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "tap_action": {
                                                            "action": "toggle"
                                                        },
                                                        "entity": "switch.starrunner_logoff",
                                                        "name": "Log Off",
                                                        "show_icon": false
                                                    },
                                                    {
                                                        "type": "button",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "tap_action": {
                                                            "action": "toggle"
                                                        },
                                                        "entity": "switch.starrunner_restart",
                                                        "name": "Restart",
                                                        "show_icon": false
                                                    },
                                                    {
                                                        "type": "button",
                                                        "card_mod": {
                                                            "class": "noblur"
                                                        },
                                                        "tap_action": {
                                                            "action": "toggle"
                                                        },
                                                        "entity": "switch.starrunner_shutdown",
                                                        "name": "Shutdown",
                                                        "show_icon": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": "custom:vertical-stack-in-card",
                            "title": "Starrunner"
                        },
                        {
                            "type": "custom:vertical-stack-in-card",
                            "title": "Endeavor",
                            "cards": [
                                {
                                    "type": "horizontal-stack",
                                    "card_mod": {
                                        "class": "noblur"
                                    },
                                    "cards": [
                                        {
                                            "entity": "sensor.endeavor_cpu_used",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "min": 0,
                                            "name": "CPU",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "needle": true
                                        },
                                        {
                                            "entity": "sensor.endeavor_ram_used_percent",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "name": "RAM",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "min": 0,
                                            "needle": true
                                        },
                                        {
                                            "entity": "sensor.endeavor_mnt_cache_used_percent",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "min": 0,
                                            "name": "CACHE",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "needle": true
                                        },
                                        {
                                            "entity": "sensor.endeavor_composite_temperature",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "min": 0,
                                            "name": "Temp",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "needle": true
                                        }
                                    ]
                                },
                                {
                                    "type": "horizontal-stack",
                                    "cards": [
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.endeavor_cpu_used"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        },
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.endeavor_ram_used_percent"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        },
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.endeavor_mnt_cache_used_percent"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        },
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.endeavor_composite_temperature"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        }
                                    ]
                                },
                                {
                                    "type": "horizontal-stack",
                                    "cards": [
                                        {
                                            "type": "button",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "tap_action": {
                                                "action": "toggle"
                                            },
                                            "entity": "switch.endeavor_array",
                                            "name": "Array",
                                            "show_icon": false
                                        },
                                        {
                                            "type": "button",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "tap_action": {
                                                "action": "toggle"
                                            },
                                            "entity": "switch.endeavor_partitycheck",
                                            "name": "Parity",
                                            "show_icon": false
                                        },
                                        {
                                            "type": "button",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "tap_action": {
                                                "action": "toggle"
                                            },
                                            "entity": "switch.endeavor_mover",
                                            "name": "Mover",
                                            "show_icon": false
                                        },
                                        {
                                            "type": "button",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "tap_action": {
                                                "action": "toggle"
                                            },
                                            "entity": "switch.endeavor_reboot",
                                            "name": "Restart",
                                            "show_icon": false
                                        }
                                    ]
                                },
                                {
                                    "type": "custom:bar-card",
                                    "card_mod": {
                                        "class": "noblur"
                                    },
                                    "entities": [
                                        {
                                            "entity": "sensor.endeavor_storage_used",
                                            "icon": "mdi:harddisk",
                                            "name": "Storage Used",
                                            "max": 12
                                        },
                                        {
                                            "entity": "sensor.endeavor_mnt_cache_used",
                                            "name": "Cache Used",
                                            "icon": "mdi:server",
                                            "max": 1000
                                        }
                                    ]
                                },
                                {
                                    "type": "custom:auto-entities",
                                    "filter": {
                                        "include": [
                                            {
                                                "entity_id": "switch.endeavor_docker_*"
                                            }
                                        ]
                                    },
                                    "card": {
                                        "type": "custom:fold-entity-row",
                                        "mute": true,
                                        "head": {
                                            "type": "section",
                                            "label": "Docker Control"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "type": "custom:vertical-stack-in-card",
                            "title": "Terrapin",
                            "cards": [
                                {
                                    "type": "horizontal-stack",
                                    "card_mod": {
                                        "class": "noblur"
                                    },
                                    "cards": [
                                        {
                                            "entity": "sensor.terrapin_cpu_used",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "min": 0,
                                            "name": "CPU",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "needle": true
                                        },
                                        {
                                            "entity": "sensor.terrapin_ram_used_percent",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "name": "RAM",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "min": 0,
                                            "needle": true
                                        },
                                        {
                                            "entity": "sensor.terrapin_swap_used_percent",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "min": 0,
                                            "name": "SWAP",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "needle": true
                                        },
                                        {
                                            "entity": "sensor.terrapin_cpu_thermal_1_temperature",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "max": 100,
                                            "min": 0,
                                            "name": "Temp",
                                            "severity": {
                                                "green": 0,
                                                "red": 90,
                                                "yellow": 80
                                            },
                                            "type": "gauge",
                                            "needle": true
                                        }
                                    ]
                                },
                                {
                                    "type": "horizontal-stack",
                                    "cards": [
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.terrapin_cpu_used"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        },
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.terrapin_ram_used_percent"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        },
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.terrapin_swap_used_percent"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        },
                                        {
                                            "type": "custom:mini-graph-card",
                                            "card_mod": {
                                                "class": "noblur"
                                            },
                                            "color_thresholds": [
                                                {
                                                    "color": "red",
                                                    "value": 70
                                                },
                                                {
                                                    "color": "yellow",
                                                    "value": 50
                                                },
                                                {
                                                    "color": "green",
                                                    "value": 0
                                                }
                                            ],
                                            "entities": [
                                                {
                                                    "entity": "sensor.terrapin_cpu_thermal_1_temperature"
                                                }
                                            ],
                                            "hours_to_show": 0.1,
                                            "line_width": 1,
                                            "lower_bound": 0,
                                            "points_per_hour": 3600,
                                            "show": {
                                                "name": false,
                                                "icon": false,
                                                "state": false
                                            },
                                            "update_interval": 1,
                                            "upper_bound": 100
                                        }
                                    ]
                                },
                                {
                                    "type": "custom:bar-card",
                                    "card_mod": {
                                        "class": "noblur"
                                    },
                                    "entities": [
                                        {
                                            "entity": "sensor.terrapin_data_used",
                                            "icon": "mdi:harddisk",
                                            "name": "Storage Used",
                                            "unit_of_measurement": "GB",
                                            "max": 128
                                        },
                                        {
                                            "entity": "sensor.terrapin_swap_used",
                                            "name": "SWAP Used",
                                            "icon": "mdi:server",
                                            "unit_of_measurement": "GB",
                                            "max": 0.954
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }
}